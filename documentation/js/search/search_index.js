var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractState.html",[0,0.397,1,2.325]],["body/classes/AbstractState.html",[0,0.289,1,2.52,2,1.225,3,0.289,4,0.225,5,0.256,6,1.946,7,2.52,8,1.82,9,0.256,10,1.09,11,3.082,12,3.463,13,2.987,14,2.963,15,2.46,16,1.399,17,2.898,18,3.337,19,2.898,20,2.898,21,3.463,22,0.639,23,0.032,24,2.181,25,2.416,26,1.703,27,3.472,28,3.472,29,1.459,30,2.331,31,2.181,32,3.472,33,2.331,34,3.463,35,3.472,36,2.331,37,1.537,38,3.472,39,2.331,40,2.898,41,2.664,42,2.342,43,4.148,44,3.875,45,2.331,46,1.09,47,0.712,48,0.778,49,1.946,50,1.537,51,3.322,52,2.331,53,2.898,54,2.331,55,2.331,56,2.331,57,0.791,58,2.331,59,0.732,60,1.946,61,1.502,62,1.692,63,3.463,64,1.692,65,3.472,66,1.502,67,1.502,68,1.692,69,1.692,70,1.946,71,2.331,72,1.664,73,1.692,74,2.331,75,0.289,76,2.331,77,2.331,78,2.331,79,0.863,80,2.331,81,2.331,82,2.331,83,2.331,84,0.017,85,0.017]],["title/interfaces/ActionResponse.html",[86,0.718,87,2.065]],["body/interfaces/ActionResponse.html",[3,0.519,4,0.403,5,0.46,9,0.46,10,1.627,22,0.697,23,0.031,26,2.179,42,2.47,47,1.207,75,0.519,84,0.026,85,0.026,86,0.938,87,3.34,88,1.837,89,3.493,90,3.493,91,4.91,92,1.781]],["title/classes/ActionsInjector.html",[0,0.397,93,2.065]],["body/classes/ActionsInjector.html",[0,0.536,2,2.276,3,0.536,4,0.417,5,0.476,9,0.476,10,1.662,22,0.536,23,0.03,29,1.152,48,1.186,57,0.6,75,0.536,84,0.026,85,0.026,93,3.41,94,3.84,95,3.143,96,4.769,97,2.725,98,3.614,99,1.152,100,3.143]],["title/injectables/ActionsListenerService.html",[101,0.852,102,1.857]],["body/injectables/ActionsListenerService.html",[0,0.391,3,0.391,4,0.304,5,0.347,9,0.347,11,1.66,16,1.738,22,0.654,23,0.032,29,1.404,37,2.047,42,1.386,46,1.658,47,1.198,48,1.102,50,1.82,57,0.766,59,0.992,75,0.391,79,1.598,84,0.021,85,0.021,87,2.036,92,1.649,94,4.011,99,0.84,101,1.148,102,2.501,103,1.514,104,2.637,105,4.962,106,1.386,107,3.159,108,4.406,109,3.159,110,2.781,111,5.279,112,3.159,113,3.159,114,3.159,115,2.293,116,1.831,117,3.159,118,2.036,119,1.831,120,1.66,121,2.293,122,2.637,123,3.159,124,3.159,125,3.159,126,3.159]],["title/injectables/IdbStorageService.html",[101,0.852,127,2.065]],["body/injectables/IdbStorageService.html",[0,0.385,3,0.385,4,0.3,5,0.342,7,2.257,9,0.342,16,1.719,22,0.65,23,0.032,26,1.943,29,1.395,37,2.154,46,1.647,47,1.193,48,1.176,50,1.805,57,0.727,59,0.977,75,0.385,79,1.805,84,0.021,85,0.021,92,1.737,99,0.827,101,1.135,103,1.491,106,1.365,127,2.751,128,4.588,129,2.596,130,2.243,131,3.098,132,3.11,133,5.677,134,3.11,135,3.563,136,3.11,137,3.563,138,3.11,139,3.563,140,3.11,141,2.474,142,2.596,143,2.596,144,2.596,145,1.635,146,2.596,147,3.11,148,3.11,149,2.005,150,3.11]],["title/classes/LeaveRouteContext.html",[0,0.397,151,2.065]],["body/classes/LeaveRouteContext.html",[0,0.379,2,1.61,3,0.379,4,0.295,5,0.336,9,0.336,10,1.326,22,0.7,23,0.03,29,1.503,46,0.962,47,0.628,48,0.687,57,0.424,75,0.379,84,0.021,85,0.021,92,1.507,106,1.344,151,2.722,152,1.975,153,4.834,154,3.733,155,1.775,156,5.221,157,3.359,158,5.466,159,4.563,160,4.563,161,2.441,162,2.556,163,3.268,164,2.556,165,2.223,166,2.556,167,2.556,168,3.062,169,3.062,170,1.775,171,1.61,172,2.556]],["title/injectables/ObserveRouteLeaveService.html",[101,0.852,173,2.065]],["body/injectables/ObserveRouteLeaveService.html",[0,0.251,3,0.251,4,0.196,5,0.223,9,0.223,10,0.982,11,1.067,13,3.248,16,1.259,20,2.609,22,0.531,23,0.032,25,1.643,26,1.412,29,1.354,37,1.412,46,0.982,47,0.641,48,0.701,50,0.752,57,0.729,59,0.637,72,0.973,75,0.251,79,1.81,84,0.015,85,0.015,92,1.102,97,2.234,99,0.54,101,0.832,103,0.973,106,0.891,116,1.176,118,1.308,119,1.812,120,1.067,151,2.015,152,1.792,154,3.476,159,3.861,160,3.183,161,1.863,170,1.176,171,1.067,173,2.015,174,3.047,175,1.694,176,3.813,177,3.813,178,2.609,179,3.813,180,1.308,181,1.725,182,2.768,183,2.251,184,2.029,185,1.643,186,1.694,187,2.251,188,2.029,189,2.029,190,2.029,191,2.029,192,2.029,193,2.029,194,2.029,195,2.029,196,2.029,197,0.973,198,0.891,199,1.176,200,1.067,201,1.473,202,2.029,203,1.812,204,1.473,205,1.308,206,1.176,207,1.473,208,2.029,209,1.694,210,1.308,211,3.575,212,3.126,213,3.126,214,2.029,215,1.694,216,2.029,217,3.813,218,1.308,219,2.029,220,2.029,221,2.029,222,1.473,223,1.308,224,1.308,225,2.029,226,2.029,227,3.813,228,2.251,229,3.813,230,2.269,231,1.473,232,1.308,233,1.473,234,1.473,235,1.473,236,1.473,237,1.473,238,1.473,239,2.029,240,1.308,241,1.473,242,1.473]],["title/injectables/ObserveRouteService.html",[101,0.852,243,1.857]],["body/injectables/ObserveRouteService.html",[0,0.32,3,0.32,4,0.249,5,0.284,8,1.643,9,0.284,13,2.552,15,1.133,16,1.508,22,0.683,23,0.032,29,0.996,37,1.631,46,1.176,47,0.768,48,0.839,50,0.957,57,0.783,59,0.811,72,1.794,75,0.635,79,0.957,84,0.018,85,0.018,86,0.579,92,1.482,97,2.42,99,0.687,101,0.687,103,1.238,106,1.133,116,1.497,118,1.665,119,1.497,120,1.357,149,1.665,152,1.502,161,1.945,163,1.967,174,2.552,178,3.125,180,1.665,181,1.945,182,3.196,183,2.538,185,1.967,186,2.156,187,2.538,197,1.238,198,1.133,199,1.497,200,1.357,201,1.874,203,1.497,204,1.874,205,1.665,206,2.17,207,1.874,210,1.665,218,1.665,222,1.874,223,2.413,224,2.413,228,1.967,230,1.874,231,1.874,233,1.874,234,1.874,235,1.874,236,1.874,237,1.874,238,1.874,240,1.665,241,1.874,242,1.874,243,2.17,244,1.665,245,2.582,246,2.582,247,2.17,248,2.156,249,2.717,250,2.717,251,2.413,252,2.413,253,2.156,254,2.156,255,2.156,256,1.874,257,2.156]],["title/interfaces/PersistenceOptions.html",[86,0.718,258,2.065]],["body/interfaces/PersistenceOptions.html",[3,0.343,4,0.267,5,0.304,9,0.304,10,1.235,14,1.784,22,0.487,23,0.033,25,1.455,26,1.025,37,1.457,47,1.18,48,1.118,57,0.823,59,0.869,63,3.82,66,1.784,67,1.784,68,2.009,70,2.31,75,0.343,79,1.696,84,0.019,85,0.019,86,0.621,88,1.214,92,1.441,97,1.214,120,1.455,141,3.052,142,2.31,145,3.156,198,1.214,203,1.604,205,1.784,228,2.406,232,1.784,258,2.95,259,2.009,260,3.284,261,2.767,262,3.934,263,2.009,264,2.767,265,1.604,266,2.009,267,2.767,268,2.009,269,3.934,270,2.767,271,1.784,272,2.767,273,4.577,274,2.767,275,2.767,276,2.009,277,2.767,278,2.767,279,2.767,280,2.767,281,2.767,282,2.767,283,2.767,284,2.767,285,2.31,286,1.784,287,2.767,288,2.009,289,1.784,290,2.31,291,2.767,292,2.767,293,2.31]],["title/classes/RouteContext.html",[0,0.397,247,1.857]],["body/classes/RouteContext.html",[0,0.468,2,1.985,3,0.468,4,0.364,5,0.415,9,0.415,10,1.525,22,0.665,23,0.031,29,1.428,46,1.186,47,0.775,48,0.847,57,0.523,75,0.468,84,0.024,85,0.024,106,1.657,152,1.932,155,2.189,156,4.893,157,3.652,161,2.361,162,3.152,163,3.282,164,3.152,165,3.525,170,2.189,171,1.985,172,3.152,247,2.815,294,4.73]],["title/interfaces/RouteObserverWatcher.html",[86,0.718,187,1.684]],["body/interfaces/RouteObserverWatcher.html",[0,0.329,3,0.329,4,0.256,5,0.292,8,2.147,9,0.292,10,1.2,13,2.594,15,1.166,22,0.718,23,0.032,37,1.416,57,0.789,59,0.835,72,1.832,75,0.642,79,0.985,84,0.019,85,0.019,86,0.596,88,1.166,92,1.608,97,1.964,99,0.707,101,0.707,116,1.54,118,1.713,119,1.54,120,1.397,149,1.713,152,0.906,161,2.335,163,2.009,174,1.54,181,1.539,182,1.929,183,2.009,185,1.397,187,2.352,197,1.274,198,1.166,199,1.54,200,1.397,201,1.929,203,1.54,204,1.929,205,1.713,206,3.005,207,1.929,210,1.713,218,1.713,222,1.929,223,3.342,224,3.342,228,2.009,230,1.929,231,1.929,233,1.929,234,1.929,235,1.929,236,1.929,237,1.929,238,1.929,240,1.713,241,1.929,242,1.929,243,1.54,244,1.713,247,2.215,248,2.218,249,2.774,250,2.774,251,3.154,252,2.463,253,2.218,254,2.218,255,2.218,256,1.929,257,2.218]],["title/injectables/RouterService.html",[101,0.852,181,1.29]],["body/injectables/RouterService.html",[0,0.382,3,0.382,4,0.297,5,0.338,7,2.237,9,0.338,10,1.332,11,2.549,13,2.811,16,1.708,22,0.525,23,0.032,25,2.229,26,1.571,29,1.39,37,2.029,46,0.968,47,0.632,48,0.691,50,1.142,57,0.785,59,0.968,75,0.382,79,1.142,84,0.021,85,0.021,99,0.82,101,1.128,103,1.477,106,1.352,119,1.786,120,1.62,146,2.572,152,1.868,161,2.337,170,1.786,171,1.62,180,1.986,181,1.954,185,2.976,199,1.786,200,1.62,203,1.786,256,3.078,295,2.572,296,4.849,297,4.849,298,3.081,299,3.081,300,4.241,301,4.241,302,3.54,303,4.849,304,3.081,305,4.241,306,4.241,307,3.081,308,2.572,309,4.241,310,3.081]],["title/modules/SasActionsModule.html",[311,1.857,312,2.065]],["body/modules/SasActionsModule.html",[0,0.458,3,0.458,4,0.356,5,0.406,23,0.032,57,0.807,75,0.458,84,0.024,85,0.024,93,2.38,97,2.466,99,0.982,102,3.457,110,3.621,122,3.083,130,1.941,198,2.1,311,2.775,312,3.844,313,1.77,314,2.775,315,3.083,316,3.083,317,3.474,318,2.38,319,3.693,320,3.693,321,3.693,322,3.085,323,4.786,324,3.083,325,3.693,326,3.474,327,3.083,328,3.083,329,3.693]],["title/modules/SasModule.html",[311,1.857,330,2.325]],["body/modules/SasModule.html",[0,0.566,3,0.566,4,0.44,5,0.501,23,0.032,57,0.633,75,0.566,84,0.027,85,0.027,99,1.215,313,2.188,322,3.521,327,3.811,330,3.966,331,4.565,332,4.565,333,4.565]],["title/modules/SasRouteObserverModule.html",[311,1.857,334,2.065]],["body/modules/SasRouteObserverModule.html",[0,0.434,3,0.434,4,0.337,5,0.384,23,0.032,57,0.831,75,0.434,84,0.023,85,0.023,99,0.931,130,1.84,152,1.194,154,2.979,171,1.84,173,3.335,181,2.414,197,2.215,198,2.27,243,2.679,313,1.678,314,2.679,317,3.355,318,2.256,322,2.979,334,3.788,335,2.921,336,2.921,337,3.5,338,3.5,339,4.621,340,2.541,341,3.355,342,3.5,343,3.5,344,2.541,345,2.541,346,3.5,347,3.5,348,2.921,349,3.5,350,3.5,351,3.5,352,4.621,353,3.5,354,3.5,355,4.621,356,3.5]],["title/modules/SasStoragePluginModule.html",[289,2.065,311,1.857]],["body/modules/SasStoragePluginModule.html",[0,0.539,3,0.539,4,0.419,5,0.478,23,0.031,57,0.793,75,0.539,84,0.026,85,0.026,97,2.615,99,1.157,145,2.788,198,1.908,265,2.52,289,3.419,313,2.084,322,2.803,328,3.63,357,4.348,358,4.348,359,3.85,360,4.348,361,4.348]],["title/interfaces/StateContext.html",[24,1.684,86,0.718]],["body/interfaces/StateContext.html",[3,0.454,4,0.353,5,0.403,9,0.403,15,2.09,16,1.919,17,3.976,18,4.067,19,3.976,22,0.59,23,0.031,24,2.504,29,1.408,41,3.248,42,2.612,46,1.496,47,0.978,48,1.068,50,1.961,51,3.837,53,3.976,57,0.508,60,3.06,61,2.363,75,0.454,84,0.024,85,0.024,86,0.822,88,1.609,155,2.125,165,2.661,166,3.06,167,3.06,362,3.611,363,4.764]],["title/interfaces/StateContract.html",[8,1.406,86,0.718]],["body/interfaces/StateContract.html",[3,0.492,4,0.383,5,0.436,8,2.2,9,0.436,10,1.574,11,2.888,12,4.818,15,2.612,21,4.818,22,0.681,23,0.03,24,3.195,37,2.138,42,2.411,57,0.695,59,1.247,72,1.903,75,0.492,84,0.025,85,0.025,86,0.89,88,1.742,364,3.314,365,5.013]],["title/interfaces/StateMeta.html",[31,1.684,86,0.718]],["body/interfaces/StateMeta.html",[3,0.458,4,0.356,5,0.406,9,0.406,10,1.503,22,0.739,23,0.031,31,2.516,42,2.33,47,1.153,48,1.337,57,0.663,59,1.16,75,0.658,84,0.024,85,0.024,86,0.828,88,1.621,92,1.536,362,2.38,366,2.681,367,5.618,368,4.859,369,4.69,370,4.078,371,4.078,372,3.995,373,3.693,374,3.995]],["title/interfaces/StorageContract.html",[86,0.718,141,1.857]],["body/interfaces/StorageContract.html",[3,0.454,4,0.353,5,0.403,9,0.403,16,1.919,22,0.656,23,0.031,26,1.961,29,1.408,37,2.245,46,1.662,47,1.221,48,1.187,50,1.961,57,0.508,59,1.151,75,0.454,84,0.024,85,0.024,86,0.822,88,1.609,92,1.796,130,2.504,131,3.458,135,3.976,137,3.976,139,3.976,141,2.761,149,2.363,375,3.06,376,3.666,377,3.666,378,3.666]],["title/classes/StorageInjector.html",[0,0.397,265,1.857]],["body/classes/StorageInjector.html",[0,0.536,2,2.276,3,0.536,4,0.417,5,0.476,9,0.476,10,1.662,22,0.536,23,0.03,29,1.152,48,1.186,57,0.6,75,0.536,84,0.026,85,0.026,95,3.143,96,4.769,97,2.725,98,3.614,99,1.152,100,3.143,265,3.067,379,4.416]],["title/injectables/UrlParserService.html",[101,0.852,183,1.684]],["body/injectables/UrlParserService.html",[0,0.329,3,0.329,4,0.256,5,0.292,9,0.292,11,1.397,16,1.539,22,0.554,23,0.032,26,1.658,29,1.191,46,1.537,47,0.918,48,1.003,50,1.416,57,0.719,75,0.329,79,2,84,0.019,85,0.019,92,1.561,99,0.707,101,1.017,103,1.274,106,1.166,115,1.929,116,1.54,152,1.669,157,1.713,161,2.241,163,2.572,170,1.54,171,1.397,180,1.713,181,1.971,183,2.009,185,2.009,197,1.274,198,1.166,199,1.54,200,1.397,206,2.215,209,2.218,210,1.713,215,3.19,218,1.713,228,2.572,232,2.463,240,1.713,252,1.713,276,2.774,380,4.085,381,2.218,382,3.822,383,3.822,384,2.657,385,3.822,386,4.893,387,2.657,388,3.822,389,4.893,390,2.657,391,2.657,392,2.218,393,2.218,394,2.657,395,3.822,396,2.657,397,2.657,398,2.657,399,2.657,400,2.657,401,2.657,402,2.657,403,2.657,404,2.657,405,2.218]],["title/coverage.html",[406,3.635]],["body/coverage.html",[0,0.501,1,1.118,5,0.169,6,1.286,8,0.676,15,1.102,22,0.191,23,0.032,24,0.81,31,0.81,44,1.118,62,1.118,64,1.118,66,0.993,67,0.993,69,1.118,72,0.739,73,1.118,84,0.012,85,0.012,86,1.069,87,0.993,89,1.286,90,1.286,93,0.993,94,1.824,95,1.824,101,1.153,102,0.893,104,1.286,110,0.993,121,1.118,127,0.993,128,1.286,129,1.286,141,0.893,151,0.993,152,2.019,153,1.286,154,1.619,155,2.127,173,0.993,174,1.844,175,1.286,181,1.012,183,0.81,187,0.81,197,0.739,243,0.893,244,1.619,247,0.893,258,0.993,259,1.824,263,1.118,265,0.893,266,1.118,268,1.118,271,2.605,286,0.993,288,1.118,294,1.286,295,1.286,326,1.118,340,1.118,341,1.118,344,1.118,345,1.118,359,1.118,362,1.619,364,1.286,366,1.118,375,1.286,379,1.286,380,1.286,381,1.286,405,5.385,406,1.286,407,1.541,408,1.541,409,1.541,410,1.541,411,2.512,412,4.334,413,2.655,414,6.253,415,1.286,416,6.311,417,1.286,418,3.063,419,3.063,420,1.286,421,1.286,422,1.286,423,1.456,424,1.456,425,1.286,426,1.286,427,4.334,428,1.541,429,1.541,430,3.181,431,2.097,432,2.097,433,1.286,434,1.286,435,1.286,436,1.541,437,3.618,438,3.618,439,1.286,440,1.286,441,2.097,442,1.286,443,3.618,444,1.286,445,1.286,446,1.286,447,2.097,448,2.655,449,1.286,450,1.286,451,1.286,452,3.318,453,1.286,454,2.097,455,1.286,456,1.824,457,2.097,458,1.286,459,1.286,460,1.286,461,1.286,462,1.824,463,1.286,464,1.286,465,1.286,466,1.286,467,2.097,468,1.286,469,1.541,470,1.541]],["title/dependencies.html",[314,2.231,471,2.683]],["body/dependencies.html",[23,0.032,59,1.272,84,0.025,85,0.025,99,1.078,100,2.94,143,3.381,144,3.381,145,2.129,308,3.381,314,2.348,324,3.381,392,3.381,393,3.381,472,4.05,473,6.268,474,4.05,475,4.05,476,5.077,477,4.238,478,4.05,479,4.05,480,4.05,481,4.05,482,4.05,483,4.05,484,4.05,485,4.05,486,4.05,487,4.05]],["title/miscellaneous/enumerations.html",[488,1.178,489,3.212]],["body/miscellaneous/enumerations.html",[9,0.525,23,0.028,84,0.028,85,0.028,130,2.514,131,3.472,423,2.772,424,3.255,488,2.099,489,3.992,490,4.076,491,3.083,492,4.783]],["title/miscellaneous/functions.html",[488,1.178,493,3.212]],["body/miscellaneous/functions.html",[4,0.322,8,1.965,9,0.367,14,2.151,15,2.217,22,0.718,23,0.03,25,1.754,26,1.236,31,2.353,41,2.595,42,2.217,46,1.769,47,1.251,48,1.263,50,1.872,51,2.886,61,2.886,84,0.022,85,0.022,92,1.295,115,2.422,145,2.353,258,2.886,259,2.422,288,3.25,423,1.934,424,2.595,425,3.737,452,2.422,456,3.25,458,2.786,459,3.737,460,2.786,462,2.422,463,3.737,464,3.737,488,1.464,490,3.25,491,2.151,493,2.786,494,2.786,495,3.337,496,3.337,497,3.337,498,3.337,499,2.786,500,3.337,501,4.477,502,3.337,503,3.337,504,3.337,505,4.477]],["title/index.html",[9,0.295,506,2.683,507,2.683]],["body/index.html",[4,0.33,23,0.023,47,0.703,84,0.023,85,0.023,286,2.21,290,4.275,318,2.21,508,3.428,509,4.558,510,3.428,511,5.121,512,5.121,513,3.428,514,3.428,515,3.428,516,4.558,517,5.682,518,5.962,519,3.428,520,3.428,521,3.428,522,3.428,523,3.428,524,3.428,525,3.428,526,2.862,527,3.428,528,3.428,529,3.428,530,5.121,531,5.121,532,3.428,533,5.682,534,3.428,535,3.428,536,3.428,537,3.428,538,3.428,539,3.428,540,3.428,541,4.558,542,4.558,543,5.458,544,3.428,545,4.558,546,4.558,547,3.428,548,5.458,549,3.428,550,3.428,551,3.428,552,5.121,553,3.428,554,3.428,555,3.428,556,2.489,557,3.428,558,3.428,559,3.428]],["title/modules.html",[313,2.088]],["body/modules.html",[23,0.027,84,0.027,85,0.027,289,2.983,312,2.983,313,2.219,330,3.36,334,2.983,477,4.598,560,5.508,561,5.508,562,6.086,563,5.508,564,5.508]],["title/overview.html",[556,3.161]],["body/overview.html",[2,2.266,23,0.029,84,0.026,85,0.026,88,1.892,102,3.306,103,2.066,130,2.266,181,2.297,312,3.83,313,2.066,314,3.059,315,3.598,316,3.598,317,3.83,318,2.779,334,3.83,335,3.598,336,3.598,556,3.129,565,4.311,566,4.311,567,4.311,568,4.311]],["title/miscellaneous/typealiases.html",[488,1.178,569,3.848]],["body/miscellaneous/typealiases.html",[9,0.397,22,0.651,23,0.028,41,2.735,61,2.329,84,0.023,85,0.023,152,1.232,161,1.901,163,2.48,174,2.094,244,3.822,249,3.815,250,3.815,251,3.042,260,3.939,271,3.591,362,2.329,366,3.815,370,3.425,371,3.425,372,3.016,374,4.387,423,2.094,424,2.735,488,1.586,491,2.329,570,3.613,571,4.719,572,3.613,573,4.719,574,4.719,575,3.613,576,4.825,577,5.572,578,4.719,579,4.719,580,3.613,581,3.613,582,3.939,583,4.719]],["title/miscellaneous/variables.html",[488,1.178,584,3.212]],["body/miscellaneous/variables.html",[8,1.969,9,0.112,14,2.253,15,2.237,18,0.74,22,0.538,23,0.033,24,0.536,25,3.11,26,2.199,29,0.271,31,0.932,34,1.479,40,0.851,41,0.591,42,1.83,44,1.286,47,0.654,49,0.851,51,2.421,62,1.286,64,0.74,66,1.142,67,0.657,68,0.74,69,1.286,72,0.849,73,1.286,79,1.86,84,0.009,85,0.009,91,0.851,92,1.427,105,0.851,108,2.659,110,2.564,121,1.707,127,0.657,145,0.536,152,0.959,155,1.027,157,0.657,161,1.408,185,0.536,187,1.478,197,0.849,200,0.536,206,1.363,211,1.479,223,1.142,224,1.142,228,2.488,232,1.142,251,1.142,252,1.142,263,1.286,266,1.707,268,1.286,271,0.657,276,1.707,285,0.851,286,2.688,293,0.851,302,1.479,326,1.286,340,1.286,341,1.286,344,1.286,345,1.286,348,1.479,359,1.286,368,0.851,369,1.479,370,1.707,371,1.286,413,0.851,415,1.963,417,0.851,418,0.851,419,2.659,420,1.479,421,1.479,422,1.963,423,0.591,424,1.027,426,1.479,431,0.851,432,1.963,433,1.479,434,1.479,435,0.851,437,0.851,438,3.135,439,1.479,440,1.479,441,2.917,442,2.347,443,0.851,444,1.479,445,2.347,446,1.479,447,0.851,448,0.851,449,1.479,450,1.479,451,1.479,452,2.041,453,1.479,454,0.851,455,1.479,456,1.286,457,0.851,461,0.851,462,0.74,465,1.479,466,1.479,467,0.851,468,1.479,488,0.447,490,0.74,491,0.657,494,0.851,499,0.851,526,0.851,576,1.479,582,0.851,584,0.851,585,1.019,586,2.812,587,2.352,588,1.772,589,3.495,590,1.772,591,3.495,592,1.019,593,1.772,594,1.019,595,2.352,596,1.019,597,2.352,598,4.934,599,3.756,600,2.352,601,2.352,602,1.019,603,2.812,604,1.772,605,1.772,606,1.019,607,1.019,608,1.772,609,1.019,610,1.019,611,1.019,612,1.019,613,1.019,614,1.772,615,1.019,616,1.019,617,2.812,618,1.772,619,1.019,620,1.019,621,1.019,622,1.772,623,1.019,624,1.772,625,1.019,626,1.019,627,1.019,628,1.019,629,1.019,630,1.019,631,1.019,632,1.019,633,1.019,634,1.019,635,2.812,636,1.019,637,1.019,638,1.019,639,1.019,640,1.019,641,1.019,642,1.019,643,1.019,644,1.019,645,2.352,646,1.019,647,1.019,648,1.019,649,1.019,650,1.019,651,1.019,652,1.019,653,1.019,654,1.019,655,1.019,656,1.019,657,1.019,658,1.772,659,1.019,660,1.019,661,1.019,662,1.019,663,1.019,664,1.019,665,1.019,666,1.019,667,1.019,668,1.019,669,1.019,670,1.019,671,1.019,672,1.019,673,1.019,674,1.019,675,1.019,676,1.019,677,1.019,678,1.772,679,1.019,680,1.019,681,1.019,682,1.019,683,1.019,684,1.019]],["title/routes.html",[685,3.635]],["body/routes.html",[23,0.029,84,0.029,85,0.029,685,4.213]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":405,"title":{},"body":{"injectables/UrlParserService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":239,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["11.2.10",{"_index":514,"title":{},"body":{"index.html":{}}}],["12.1.0",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["12.2.2",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":213,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["2.0.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":565,"title":{},"body":{"overview.html":{}}}],["4.17.21",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":567,"title":{},"body":{"overview.html":{}}}],["6",{"_index":566,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":568,"title":{},"body":{"overview.html":{}}}],["a.name",{"_index":125,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["abstract",{"_index":76,"title":{},"body":{"classes/AbstractState.html":{}}}],["abstractstate",{"_index":1,"title":{"classes/AbstractState.html":{}},"body":{"classes/AbstractState.html":{},"coverage.html":{}}}],["accessors",{"_index":20,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ObserveRouteLeaveService.html":{}}}],["action",{"_index":44,"title":{},"body":{"classes/AbstractState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action.ts",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionresponse",{"_index":87,"title":{"interfaces/ActionResponse.html":{}},"body":{"interfaces/ActionResponse.html":{},"injectables/ActionsListenerService.html":{},"coverage.html":{}}}],["actions",{"_index":110,"title":{},"body":{"injectables/ActionsListenerService.html":{},"modules/SasActionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions.module.ts",{"_index":320,"title":{},"body":{"modules/SasActionsModule.html":{}}}],["actions.next({value",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.providers",{"_index":122,"title":{},"body":{"injectables/ActionsListenerService.html":{},"modules/SasActionsModule.html":{}}}],["actions/decorators/action",{"_index":71,"title":{},"body":{"classes/AbstractState.html":{}}}],["actions_subject",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionsinjector",{"_index":93,"title":{"classes/ActionsInjector.html":{}},"body":{"classes/ActionsInjector.html":{},"modules/SasActionsModule.html":{},"coverage.html":{}}}],["actionsinjector.injector",{"_index":329,"title":{},"body":{"modules/SasActionsModule.html":{}}}],["actionsinjector.injector?.get(sas_actions",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actionslistenerservice",{"_index":102,"title":{"injectables/ActionsListenerService.html":{}},"body":{"injectables/ActionsListenerService.html":{},"modules/SasActionsModule.html":{},"coverage.html":{},"overview.html":{}}}],["actiontype",{"_index":490,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["actiontype.patch",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontype.reset",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actiontype.set",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addfactory",{"_index":263,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addfactory(ctor.prototype",{"_index":274,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["addleavewatcher",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addleavewatcher({url",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addpipes",{"_index":268,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addpipes(ctor.prototype",{"_index":277,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["addwatcher",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["addwatcher({url",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":570,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":511,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":324,"title":{},"body":{"modules/SasActionsModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":99,"title":{},"body":{"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":308,"title":{},"body":{"injectables/RouterService.html":{},"dependencies.html":{}}}],["any[]).foreach((v",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":523,"title":{},"body":{"index.html":{}}}],["args",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":534,"title":{},"body":{"index.html":{}}}],["asyncaction",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["asyncaction(type",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asyncactiontype",{"_index":571,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["audittime",{"_index":202,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["automatically",{"_index":524,"title":{},"body":{"index.html":{}}}],["available",{"_index":564,"title":{},"body":{"modules.html":{}}}],["base",{"_index":224,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"miscellaneous/variables.html":{}}}],["basefilter",{"_index":296,"title":{},"body":{"injectables/RouterService.html":{}}}],["behaviorsubject",{"_index":34,"title":{},"body":{"classes/AbstractState.html":{},"miscellaneous/variables.html":{}}}],["behaviorsubject(meta.defaults",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bindcallback",{"_index":236,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["bindcallback(new",{"_index":238,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/UrlParserService.html":{}}}],["boolean(meta",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean(object.entries(params).filter(([key",{"_index":396,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["boolean(this.previousurl",{"_index":216,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["boolean(v",{"_index":234,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["browse",{"_index":562,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":477,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":533,"title":{},"body":{"index.html":{}}}],["buildstatecontext",{"_index":73,"title":{},"body":{"classes/AbstractState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buildstatecontext(this.state",{"_index":27,"title":{},"body":{"classes/AbstractState.html":{}}}],["callback",{"_index":223,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"miscellaneous/variables.html":{}}}],["callback.bind(this.injector.get(base",{"_index":237,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["change",{"_index":526,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["changestate",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":555,"title":{},"body":{"index.html":{}}}],["checkqueryparams",{"_index":382,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["checkqueryparams(params",{"_index":385,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["checkurlandgetparametersifexists",{"_index":383,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["checkurlandgetparametersifexists(url",{"_index":388,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractState.html":{},"classes/ActionsInjector.html":{},"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{},"classes/StorageInjector.html":{}},"body":{"classes/AbstractState.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractState.html":{},"classes/ActionsInjector.html":{},"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{},"classes/StorageInjector.html":{},"overview.html":{}}}],["cli",{"_index":512,"title":{},"body":{"index.html":{}}}],["cloneandmerge",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cloneandmerge(source",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clonedeep",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(cp[k",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clonedeep(n",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_sasactionsmodule",{"_index":315,"title":{},"body":{"modules/SasActionsModule.html":{},"overview.html":{}}}],["cluster_sasactionsmodule_providers",{"_index":316,"title":{},"body":{"modules/SasActionsModule.html":{},"overview.html":{}}}],["cluster_sasrouteobservermodule",{"_index":335,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"overview.html":{}}}],["cluster_sasrouteobservermodule_providers",{"_index":336,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"overview.html":{}}}],["code",{"_index":528,"title":{},"body":{"index.html":{}}}],["command",{"_index":557,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":323,"title":{},"body":{"modules/SasActionsModule.html":{}}}],["component",{"_index":531,"title":{},"body":{"index.html":{}}}],["const",{"_index":228,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":106,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{}}}],["constructor(@inject(router_service",{"_index":218,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{}}}],["constructor(@inject(sas_actions",{"_index":123,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["constructor(actions",{"_index":107,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["constructor(injector",{"_index":328,"title":{},"body":{"modules/SasActionsModule.html":{},"modules/SasStoragePluginModule.html":{}}}],["constructor(observerouteservice",{"_index":350,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["constructor(params",{"_index":162,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{}}}],["constructor(private",{"_index":146,"title":{},"body":{"injectables/IdbStorageService.html":{},"injectables/RouterService.html":{}}}],["constructor(public",{"_index":172,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{}}}],["constructor(router",{"_index":180,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{}}}],["constructor(storagemap",{"_index":132,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["context",{"_index":72,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateContract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.ts",{"_index":155,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{},"interfaces/StateContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.ts:3",{"_index":164,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{}}}],["context.ts:4",{"_index":165,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{},"interfaces/StateContext.html":{}}}],["context.ts:5",{"_index":169,"title":{},"body":{"classes/LeaveRouteContext.html":{}}}],["context.ts:6",{"_index":167,"title":{},"body":{"classes/LeaveRouteContext.html":{},"interfaces/StateContext.html":{}}}],["context.ts:7",{"_index":168,"title":{},"body":{"classes/LeaveRouteContext.html":{}}}],["context.ts:8",{"_index":166,"title":{},"body":{"classes/LeaveRouteContext.html":{},"interfaces/StateContext.html":{}}}],["context/leave",{"_index":208,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["context/route",{"_index":248,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["coverage",{"_index":406,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cp.map((n",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cp.push(v",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cp[k",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createstate",{"_index":62,"title":{},"body":{"classes/AbstractState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createstate(this",{"_index":35,"title":{},"body":{"classes/AbstractState.html":{}}}],["ctor",{"_index":262,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["ctor.ts",{"_index":578,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ctx",{"_index":12,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContract.html":{}}}],["current",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentparams",{"_index":386,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["currenturl",{"_index":389,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["currenturl.split",{"_index":402,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["data",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(target.gettime",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounce",{"_index":269,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["declarations",{"_index":332,"title":{},"body":{"modules/SasModule.html":{}}}],["decorator",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":43,"title":{},"body":{"classes/AbstractState.html":{}}}],["deep",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["deep.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["deeppartial",{"_index":41,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":25,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ObserveRouteLeaveService.html":{},"interfaces/PersistenceOptions.html":{},"injectables/RouterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["default_storage",{"_index":266,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultactionname",{"_index":420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultactionname(target",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":367,"title":{},"body":{"interfaces/StateMeta.html":{}}}],["defined",{"_index":29,"title":{},"body":{"classes/AbstractState.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":314,"title":{"dependencies.html":{}},"body":{"modules/SasActionsModule.html":{},"modules/SasRouteObserverModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":321,"title":{},"body":{"modules/SasActionsModule.html":{}}}],["descriptor",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descriptor.value",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":520,"title":{},"body":{"index.html":{}}}],["development",{"_index":515,"title":{},"body":{"index.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":532,"title":{},"body":{"index.html":{}}}],["directory",{"_index":537,"title":{},"body":{"index.html":{}}}],["dispatchaction",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dispatchaction(this",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":536,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["dynamic",{"_index":100,"title":{},"body":{"classes/ActionsInjector.html":{},"classes/StorageInjector.html":{},"dependencies.html":{}}}],["e",{"_index":256,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{}}}],["e.url.split('?')[0",{"_index":306,"title":{},"body":{"injectables/RouterService.html":{}}}],["e2e",{"_index":549,"title":{},"body":{"index.html":{}}}],["end",{"_index":548,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":489,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('add",{"_index":287,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["error('state",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["es",{"_index":393,"title":{},"body":{"injectables/UrlParserService.html":{},"dependencies.html":{}}}],["execute",{"_index":545,"title":{},"body":{"index.html":{}}}],["export",{"_index":75,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{}}}],["exports",{"_index":333,"title":{},"body":{"modules/SasModule.html":{}}}],["extends",{"_index":365,"title":{},"body":{"interfaces/StateContract.html":{}}}],["factories",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factories.length",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factories.push(factory",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory",{"_index":368,"title":{},"body":{"interfaces/StateMeta.html":{},"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":579,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["factorystarted",{"_index":273,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["false",{"_index":232,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"interfaces/PersistenceOptions.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"coverage.html":{}}}],["files",{"_index":527,"title":{},"body":{"index.html":{}}}],["filter",{"_index":119,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{}}}],["filter((e",{"_index":301,"title":{},"body":{"injectables/RouterService.html":{}}}],["filter(v",{"_index":233,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["flag",{"_index":539,"title":{},"body":{"index.html":{}}}],["function",{"_index":271,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":493,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":551,"title":{},"body":{"index.html":{}}}],["generate",{"_index":530,"title":{},"body":{"index.html":{}}}],["generated",{"_index":510,"title":{},"body":{"index.html":{}}}],["get(name",{"_index":135,"title":{},"body":{"injectables/IdbStorageService.html":{},"interfaces/StorageContract.html":{}}}],["getactions",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfactories",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfactories(state",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadata",{"_index":66,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmetadata(ctor.prototype",{"_index":292,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["getmetadata(state",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadata(target",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadata(this",{"_index":32,"title":{},"body":{"classes/AbstractState.html":{}}}],["getname",{"_index":291,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["getnotfirstroute",{"_index":195,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["getpipes",{"_index":69,"title":{},"body":{"classes/AbstractState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpipes(state",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpreviousleavewatchers",{"_index":344,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpreviousleavewatchers().foreach(value",{"_index":354,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["getpreviousqueryparams",{"_index":193,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["getpreviousurl",{"_index":191,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["getpreviouswatchers",{"_index":340,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getpreviouswatchers().foreach(value",{"_index":351,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["getsnapshot",{"_index":55,"title":{},"body":{"classes/AbstractState.html":{}}}],["getstorage",{"_index":283,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["getstorage().get(getname()).pipe(tap",{"_index":275,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["getstorage().set(getname",{"_index":281,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["getting",{"_index":506,"title":{"index.html":{}},"body":{}}],["go",{"_index":554,"title":{},"body":{"index.html":{}}}],["graph",{"_index":563,"title":{},"body":{"modules.html":{}}}],["help",{"_index":552,"title":{},"body":{"index.html":{}}}],["helpers.ts",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpers/create",{"_index":64,"title":{},"body":{"classes/AbstractState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpers/factories",{"_index":264,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["helpers/factories.ts",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpers/get",{"_index":67,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpers/pipes",{"_index":70,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/PersistenceOptions.html":{}}}],["helpers/pipes.ts",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpers/update",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":522,"title":{},"body":{"index.html":{}}}],["idbstorageservice",{"_index":127,"title":{"injectables/IdbStorageService.html":{}},"body":{"injectables/IdbStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":78,"title":{},"body":{"classes/AbstractState.html":{}}}],["immutable",{"_index":574,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AbstractState.html":{},"injectables/IdbStorageService.html":{},"injectables/RouterService.html":{}}}],["import",{"_index":57,"title":{},"body":{"classes/AbstractState.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{}}}],["imports",{"_index":327,"title":{},"body":{"modules/SasActionsModule.html":{},"modules/SasModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{}}}],["inject",{"_index":116,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{}}}],["injectable",{"_index":101,"title":{"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{}},"body":{"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":253,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["injectables",{"_index":103,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{},"overview.html":{}}}],["injectiontoken('sas",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('special",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>>('sas",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":97,"title":{},"body":{"classes/ActionsInjector.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"modules/SasActionsModule.html":{},"modules/SasStoragePluginModule.html":{},"classes/StorageInjector.html":{}}}],["injector.ts",{"_index":95,"title":{},"body":{"classes/ActionsInjector.html":{},"classes/StorageInjector.html":{},"coverage.html":{}}}],["injector.ts:4",{"_index":98,"title":{},"body":{"classes/ActionsInjector.html":{},"classes/StorageInjector.html":{}}}],["instanceof",{"_index":302,"title":{},"body":{"injectables/RouterService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":86,"title":{"interfaces/ActionResponse.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{}},"body":{"interfaces/ActionResponse.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"coverage.html":{}}}],["interfaces",{"_index":88,"title":{},"body":{"interfaces/ActionResponse.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"overview.html":{}}}],["interfaces/action",{"_index":117,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["interfaces/router",{"_index":199,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{}}}],["isempty",{"_index":391,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["isempty(params",{"_index":394,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["isobservable",{"_index":201,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["isobservable(response",{"_index":241,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["karma",{"_index":547,"title":{},"body":{"index.html":{}}}],["key",{"_index":252,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["leave.service",{"_index":347,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["leave.service.ts",{"_index":175,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"coverage.html":{}}}],["leave.service.ts:14",{"_index":190,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave.service.ts:15",{"_index":189,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave.service.ts:17",{"_index":192,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave.service.ts:21",{"_index":194,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave.service.ts:25",{"_index":196,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave.service.ts:27",{"_index":184,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave.service.ts:38",{"_index":188,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["leave_watchers",{"_index":345,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leave_watchers$.subscribe(value",{"_index":356,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["leaveroutecontext",{"_index":151,"title":{"classes/LeaveRouteContext.html":{}},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"coverage.html":{}}}],["length",{"_index":398,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["listen",{"_index":105,"title":{},"body":{"injectables/ActionsListenerService.html":{},"miscellaneous/variables.html":{}}}],["listen(name",{"_index":111,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["listener.service",{"_index":325,"title":{},"body":{"modules/SasActionsModule.html":{}}}],["listener.service.ts",{"_index":104,"title":{},"body":{"injectables/ActionsListenerService.html":{},"coverage.html":{}}}],["listener.service.ts:12",{"_index":112,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["listener.service.ts:13",{"_index":113,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["listener.service.ts:14",{"_index":114,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["listener.service.ts:8",{"_index":109,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["literal",{"_index":582,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lodash",{"_index":392,"title":{},"body":{"injectables/UrlParserService.html":{},"dependencies.html":{}}}],["map",{"_index":203,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{}}}],["map(e",{"_index":255,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["matching",{"_index":85,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["merge",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["merge.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meta",{"_index":14,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/PersistenceOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["meta.name",{"_index":293,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"miscellaneous/variables.html":{}}}],["meta.name}.${property",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meta.ts",{"_index":366,"title":{},"body":{"interfaces/StateMeta.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":68,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/PersistenceOptions.html":{},"miscellaneous/variables.html":{}}}],["metadata.ts",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StorageContract.html":{},"injectables/UrlParserService.html":{}}}],["miscellaneous",{"_index":488,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":311,"title":{"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{}},"body":{"modules/SasActionsModule.html":{}}}],["module_loaded",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":313,"title":{"modules.html":{}},"body":{"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":553,"title":{},"body":{"index.html":{}}}],["name",{"_index":47,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":521,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":303,"title":{},"body":{"injectables/RouterService.html":{}}}],["new",{"_index":286,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":518,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":322,"title":{},"body":{"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{}}}],["ngmodule({providers",{"_index":360,"title":{},"body":{"modules/SasStoragePluginModule.html":{}}}],["ngx",{"_index":143,"title":{},"body":{"injectables/IdbStorageService.html":{},"dependencies.html":{}}}],["nopecontexttype",{"_index":250,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"miscellaneous/typealiases.html":{}}}],["notfirstroute",{"_index":179,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["null",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(cp).foreach(k",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":37,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"interfaces/StateContract.html":{},"interfaces/StorageContract.html":{}}}],["observe",{"_index":170,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{}}}],["observe_route_leave_watchers",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observe_route_leave_watchers.asobservable",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observe_route_leave_watchers.next(watcher",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observer.module.ts",{"_index":338,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["observer/interfaces/router",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["observer/observe",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observer/providers.ts",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observer/sas",{"_index":337,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["observer/services/context/leave",{"_index":153,"title":{},"body":{"classes/LeaveRouteContext.html":{},"coverage.html":{}}}],["observer/services/context/route",{"_index":294,"title":{},"body":{"classes/RouteContext.html":{},"coverage.html":{}}}],["observer/services/observe",{"_index":174,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["observer/services/router.service.ts",{"_index":295,"title":{},"body":{"injectables/RouterService.html":{},"coverage.html":{}}}],["observer/services/router.service.ts:10",{"_index":304,"title":{},"body":{"injectables/RouterService.html":{}}}],["observer/services/router.service.ts:13",{"_index":307,"title":{},"body":{"injectables/RouterService.html":{}}}],["observer/services/router.service.ts:15",{"_index":299,"title":{},"body":{"injectables/RouterService.html":{}}}],["observer/services/router.service.ts:17",{"_index":298,"title":{},"body":{"injectables/RouterService.html":{}}}],["observer/services/url",{"_index":380,"title":{},"body":{"injectables/UrlParserService.html":{},"coverage.html":{}}}],["observer/watchers/leave",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observer/watchers/watchers.ts",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observeroute",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observerouteleave",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["observerouteleaveservice",{"_index":173,"title":{"injectables/ObserveRouteLeaveService.html":{}},"body":{"injectables/ObserveRouteLeaveService.html":{},"modules/SasRouteObserverModule.html":{},"coverage.html":{}}}],["observerouteleaveservice.watch(value).subscribe",{"_index":355,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["observeroutemethodtype",{"_index":251,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observerouteservice",{"_index":243,"title":{"injectables/ObserveRouteService.html":{}},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"modules/SasRouteObserverModule.html":{},"coverage.html":{}}}],["observerouteservice.watch(value).subscribe",{"_index":352,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["of(meta.defaults",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onnavigationend",{"_index":297,"title":{},"body":{"injectables/RouterService.html":{}}}],["operatorfunction",{"_index":372,"title":{},"body":{"interfaces/StateMeta.html":{},"miscellaneous/typealiases.html":{}}}],["optional",{"_index":48,"title":{},"body":{"classes/AbstractState.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original.apply(this",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":318,"title":{},"body":{"modules/SasActionsModule.html":{},"modules/SasRouteObserverModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":556,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":471,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":559,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StorageContract.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":157,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["parser.service",{"_index":207,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["parser.service.ts",{"_index":381,"title":{},"body":{"injectables/UrlParserService.html":{},"coverage.html":{}}}],["parser.service.ts:10",{"_index":384,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["parser.service.ts:15",{"_index":387,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["parser.service.ts:31",{"_index":390,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["partial",{"_index":61,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["partial.ts",{"_index":573,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["patch",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patches",{"_index":49,"title":{},"body":{"classes/AbstractState.html":{},"miscellaneous/variables.html":{}}}],["patchstate",{"_index":17,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{}}}],["patchstate(patches",{"_index":40,"title":{},"body":{"classes/AbstractState.html":{},"miscellaneous/variables.html":{}}}],["patchstate(state",{"_index":363,"title":{},"body":{"interfaces/StateContext.html":{}}}],["persistence",{"_index":288,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["persistence(__namedparameters",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["persistence({storage",{"_index":272,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["persistenceoptions",{"_index":258,"title":{"interfaces/PersistenceOptions.html":{}},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pipe(take(1",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipes",{"_index":369,"title":{},"body":{"interfaces/StateMeta.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin.module.ts",{"_index":358,"title":{},"body":{"modules/SasStoragePluginModule.html":{}}}],["prev",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prev.pipe(switchmap(current",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous_watchers",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["previous_watchers.push(watcher",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["previous_watchers_loaded",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["previousparams",{"_index":158,"title":{},"body":{"classes/LeaveRouteContext.html":{}}}],["previousqueryparams",{"_index":159,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{}}}],["previousrouteparams",{"_index":229,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["previousurl",{"_index":160,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{}}}],["private",{"_index":13,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{}}}],["prod",{"_index":538,"title":{},"body":{"index.html":{}}}],["production",{"_index":540,"title":{},"body":{"index.html":{}}}],["project",{"_index":509,"title":{},"body":{"index.html":{}}}],["projects/.../action.ts",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../actions",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../actions.providers.ts",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../async",{"_index":491,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../build",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../clone",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../constants.ts",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../create",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../deep",{"_index":572,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../factories.ts",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../get",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../immutable.ts",{"_index":575,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../leave",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../observe",{"_index":576,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../persistence.ts",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../pipes.ts",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../providers.ts",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../state",{"_index":577,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../state.ts",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test.ts",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../update",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../watchers.ts",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts",{"_index":6,"title":{},"body":{"classes/AbstractState.html":{},"coverage.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:14",{"_index":33,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:15",{"_index":36,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:16",{"_index":30,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:18",{"_index":39,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:20",{"_index":56,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:25",{"_index":45,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:30",{"_index":52,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/abstract/abstract.state.ts:35",{"_index":54,"title":{},"body":{"classes/AbstractState.html":{}}}],["projects/sas/src/lib/actions/actions",{"_index":94,"title":{},"body":{"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"coverage.html":{}}}],["projects/sas/src/lib/actions/actions.providers.ts",{"_index":413,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/actions/decorators/action.ts",{"_index":417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/actions/decorators/actions",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/actions/decorators/async",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/actions/interfaces/action",{"_index":89,"title":{},"body":{"interfaces/ActionResponse.html":{},"coverage.html":{}}}],["projects/sas/src/lib/actions/sas",{"_index":319,"title":{},"body":{"modules/SasActionsModule.html":{}}}],["projects/sas/src/lib/plugins/route",{"_index":152,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasRouteObserverModule.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/plugins/storage/idb",{"_index":128,"title":{},"body":{"injectables/IdbStorageService.html":{},"coverage.html":{}}}],["projects/sas/src/lib/plugins/storage/persistence.ts",{"_index":259,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/sas/src/lib/plugins/storage/providers.ts",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/plugins/storage/sas",{"_index":357,"title":{},"body":{"modules/SasStoragePluginModule.html":{}}}],["projects/sas/src/lib/plugins/storage/storage",{"_index":379,"title":{},"body":{"classes/StorageInjector.html":{},"coverage.html":{}}}],["projects/sas/src/lib/plugins/storage/storage.contract.ts",{"_index":375,"title":{},"body":{"interfaces/StorageContract.html":{},"coverage.html":{}}}],["projects/sas/src/lib/plugins/storage/storage.contract.ts:4",{"_index":378,"title":{},"body":{"interfaces/StorageContract.html":{}}}],["projects/sas/src/lib/plugins/storage/storage.contract.ts:6",{"_index":376,"title":{},"body":{"interfaces/StorageContract.html":{}}}],["projects/sas/src/lib/plugins/storage/storage.contract.ts:8",{"_index":377,"title":{},"body":{"interfaces/StorageContract.html":{}}}],["projects/sas/src/lib/sas.module.ts",{"_index":331,"title":{},"body":{"modules/SasModule.html":{}}}],["projects/sas/src/lib/state/constants.ts",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/state/contracts/state",{"_index":362,"title":{},"body":{"interfaces/StateContext.html":{},"interfaces/StateMeta.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/sas/src/lib/state/contracts/state.contract.ts",{"_index":364,"title":{},"body":{"interfaces/StateContract.html":{},"coverage.html":{}}}],["projects/sas/src/lib/state/metadata",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/state/state.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/sas/src/lib/state/types/state",{"_index":583,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/sas/src/lib/types/deep",{"_index":580,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/sas/src/lib/types/immutable.ts",{"_index":581,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/sas/src/lib/util/build",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/lib/util/clone",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/sas/src/test.ts",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"classes/StorageInjector.html":{}}}],["property",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertydescriptor",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":550,"title":{},"body":{"index.html":{}}}],["provide",{"_index":348,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":209,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/UrlParserService.html":{}}}],["provider",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":198,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"modules/SasActionsModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"injectables/UrlParserService.html":{}}}],["public",{"_index":156,"title":{},"body":{"classes/LeaveRouteContext.html":{},"classes/RouteContext.html":{}}}],["pwa/local",{"_index":144,"title":{},"body":{"injectables/IdbStorageService.html":{},"dependencies.html":{}}}],["query",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparams",{"_index":161,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["queryparamshistory",{"_index":176,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/RouterService.html":{},"interfaces/StateContract.html":{},"injectables/UrlParserService.html":{}}}],["reduce",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":558,"title":{},"body":{"index.html":{}}}],["reflect.definemetadata(sas_meta_factories_key",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.definemetadata(sas_meta_pipes_key",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(sas_meta_factories_key",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(sas_meta_key",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(sas_meta_pipes_key",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":525,"title":{},"body":{"index.html":{}}}],["require",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":130,"title":{},"body":{"injectables/IdbStorageService.html":{},"modules/SasActionsModule.html":{},"modules/SasRouteObserverModule.html":{},"interfaces/StorageContract.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["reset(name",{"_index":137,"title":{},"body":{"injectables/IdbStorageService.html":{},"interfaces/StorageContract.html":{}}}],["resetstate",{"_index":18,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{},"miscellaneous/variables.html":{}}}],["response",{"_index":118,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["response.pipe(take(1)).subscribe",{"_index":242,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["response.ts",{"_index":90,"title":{},"body":{"interfaces/ActionResponse.html":{},"coverage.html":{}}}],["results",{"_index":84,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":50,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StorageContract.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":210,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{}}}],["route",{"_index":154,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"modules/SasRouteObserverModule.html":{},"coverage.html":{}}}],["route.service",{"_index":171,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"classes/RouteContext.html":{},"injectables/RouterService.html":{},"modules/SasRouteObserverModule.html":{},"injectables/UrlParserService.html":{}}}],["route.service.ts",{"_index":244,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["route.service.ts:27",{"_index":245,"title":{},"body":{"injectables/ObserveRouteService.html":{}}}],["route.service.ts:34",{"_index":246,"title":{},"body":{"injectables/ObserveRouteService.html":{}}}],["route.ts",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["route_observer_watchers",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["route_observer_watchers.asobservable",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route_observer_watchers.next(watcher",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routecontext",{"_index":247,"title":{"classes/RouteContext.html":{}},"body":{"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"coverage.html":{}}}],["routecontext(value",{"_index":257,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["routeobserverwatcher",{"_index":187,"title":{"interfaces/RouteObserverWatcher.html":{}},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routeparameters",{"_index":163,"title":{},"body":{"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteService.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{},"miscellaneous/typealiases.html":{}}}],["routeparams",{"_index":395,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["routeparams[key",{"_index":397,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["router",{"_index":185,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["router_service",{"_index":197,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"modules/SasRouteObserverModule.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routerservice",{"_index":181,"title":{"injectables/RouterService.html":{}},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasRouteObserverModule.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"overview.html":{}}}],["routerservicecontract",{"_index":309,"title":{},"body":{"injectables/RouterService.html":{}}}],["routes",{"_index":685,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":517,"title":{},"body":{"index.html":{}}}],["running",{"_index":541,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":59,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":120,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{}}}],["sas",{"_index":508,"title":{},"body":{"index.html":{}}}],["sas_actions",{"_index":121,"title":{},"body":{"injectables/ActionsListenerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sas_actions_providers",{"_index":326,"title":{},"body":{"modules/SasActionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sas_default_storage_provider",{"_index":359,"title":{},"body":{"modules/SasStoragePluginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sas_meta",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sas_meta_factories",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sas_meta_factories_key",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sas_meta_key",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sas_meta_pipes",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sas_meta_pipes_key",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sasactionsmodule",{"_index":312,"title":{"modules/SasActionsModule.html":{}},"body":{"modules/SasActionsModule.html":{},"modules.html":{},"overview.html":{}}}],["sasmodule",{"_index":330,"title":{"modules/SasModule.html":{}},"body":{"modules/SasModule.html":{},"modules.html":{}}}],["sasrouteobservermodule",{"_index":334,"title":{"modules/SasRouteObserverModule.html":{}},"body":{"modules/SasRouteObserverModule.html":{},"modules.html":{},"overview.html":{}}}],["sasstoragepluginmodule",{"_index":289,"title":{"modules/SasStoragePluginModule.html":{}},"body":{"interfaces/PersistenceOptions.html":{},"modules/SasStoragePluginModule.html":{},"modules.html":{}}}],["scaffolding",{"_index":529,"title":{},"body":{"index.html":{}}}],["serve",{"_index":519,"title":{},"body":{"index.html":{}}}],["server",{"_index":516,"title":{},"body":{"index.html":{}}}],["service",{"_index":200,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["service.ts",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["services/observe",{"_index":339,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["services/router.service",{"_index":343,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["set",{"_index":131,"title":{},"body":{"injectables/IdbStorageService.html":{},"interfaces/StorageContract.html":{},"miscellaneous/enumerations.html":{}}}],["set(name",{"_index":139,"title":{},"body":{"injectables/IdbStorageService.html":{},"interfaces/StorageContract.html":{}}}],["setstate",{"_index":19,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{}}}],["setstate(state",{"_index":53,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{}}}],["setstate(value",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snapshot",{"_index":21,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContract.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"modules/SasActionsModule.html":{},"modules/SasModule.html":{},"modules/SasRouteObserverModule.html":{},"modules/SasStoragePluginModule.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["spec\\.ts",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splitcurrenturl",{"_index":401,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["splitcurrenturl.length",{"_index":403,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["spliturl",{"_index":399,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["spliturl.length",{"_index":404,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["started",{"_index":507,"title":{"index.html":{}},"body":{}}],["state",{"_index":15,"title":{},"body":{"classes/AbstractState.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state(meta",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state.ctx.patchstate(value",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ctx.resetstate",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ctx.setstate(value",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.next(cloneandmerge(state.getvalue",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.next(meta.defaults",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.next(value",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ts",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state/contracts/state",{"_index":65,"title":{},"body":{"classes/AbstractState.html":{}}}],["state/contracts/state.contract",{"_index":58,"title":{},"body":{"classes/AbstractState.html":{}}}],["state/metadata",{"_index":63,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/PersistenceOptions.html":{}}}],["state/types/state",{"_index":261,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["statecontext",{"_index":24,"title":{"interfaces/StateContext.html":{}},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statecontract",{"_index":8,"title":{"interfaces/StateContract.html":{}},"body":{"classes/AbstractState.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateContract.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["statector",{"_index":260,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"miscellaneous/typealiases.html":{}}}],["statefactory",{"_index":370,"title":{},"body":{"interfaces/StateMeta.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["statemeta",{"_index":31,"title":{"interfaces/StateMeta.html":{}},"body":{"classes/AbstractState.html":{},"interfaces/StateMeta.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["statename",{"_index":91,"title":{},"body":{"interfaces/ActionResponse.html":{},"miscellaneous/variables.html":{}}}],["statepipe",{"_index":374,"title":{},"body":{"interfaces/StateMeta.html":{},"miscellaneous/typealiases.html":{}}}],["statepipes",{"_index":371,"title":{},"body":{"interfaces/StateMeta.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":96,"title":{},"body":{"classes/ActionsInjector.html":{},"classes/StorageInjector.html":{}}}],["storage",{"_index":145,"title":{},"body":{"injectables/IdbStorageService.html":{},"interfaces/PersistenceOptions.html":{},"modules/SasStoragePluginModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storage.contract",{"_index":142,"title":{},"body":{"injectables/IdbStorageService.html":{},"interfaces/PersistenceOptions.html":{}}}],["storage.service.ts",{"_index":129,"title":{},"body":{"injectables/IdbStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":136,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["storage.service.ts:15",{"_index":138,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["storage.service.ts:19",{"_index":140,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["storage.service.ts:7",{"_index":134,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["storagecontract",{"_index":141,"title":{"interfaces/StorageContract.html":{}},"body":{"injectables/IdbStorageService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/StorageContract.html":{},"coverage.html":{}}}],["storageinjector",{"_index":265,"title":{"classes/StorageInjector.html":{}},"body":{"interfaces/PersistenceOptions.html":{},"modules/SasStoragePluginModule.html":{},"classes/StorageInjector.html":{},"coverage.html":{}}}],["storageinjector.injector",{"_index":361,"title":{},"body":{"modules/SasStoragePluginModule.html":{}}}],["storageinjector.injector?.get(default_storage",{"_index":284,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["storagemap",{"_index":133,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["stored",{"_index":535,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":92,"title":{},"body":{"interfaces/ActionResponse.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sub.next(value",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject",{"_index":108,"title":{},"body":{"injectables/ActionsListenerService.html":{},"miscellaneous/variables.html":{}}}],["subscribe(value",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":560,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":561,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":270,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["switchmap(value",{"_index":280,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["t",{"_index":42,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"injectables/ActionsListenerService.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":204,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["tap",{"_index":205,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["tap(value",{"_index":235,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["target",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.snapshot",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":544,"title":{},"body":{"index.html":{}}}],["tests",{"_index":543,"title":{},"body":{"index.html":{}}}],["this.actions$.asobservable",{"_index":126,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["this.actions$.asobservable().pipe(filter((a",{"_index":124,"title":{},"body":{"injectables/ActionsListenerService.html":{}}}],["this.basefilter$.pipe(map(e",{"_index":305,"title":{},"body":{"injectables/RouterService.html":{}}}],["this.ctx.patchstate(patches",{"_index":81,"title":{},"body":{"classes/AbstractState.html":{}}}],["this.ctx.resetstate",{"_index":82,"title":{},"body":{"classes/AbstractState.html":{}}}],["this.ctx.setstate(state",{"_index":83,"title":{},"body":{"classes/AbstractState.html":{}}}],["this.meta",{"_index":28,"title":{},"body":{"classes/AbstractState.html":{}}}],["this.notfirstroute",{"_index":226,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.previousqueryparams",{"_index":217,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.previousurl",{"_index":227,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.queryparamshistory.push(this.router.queryparams",{"_index":221,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.queryparamshistory[this.urlhistory.length",{"_index":214,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.router.events.pipe",{"_index":300,"title":{},"body":{"injectables/RouterService.html":{}}}],["this.router.onnavigationend$.pipe",{"_index":254,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["this.router.onnavigationend$.pipe(audittime(1",{"_index":225,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.router.onnavigationend$.subscribe((url",{"_index":219,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.router.queryparams",{"_index":240,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{}}}],["this.router.routerstate.root.snapshot.queryparams",{"_index":310,"title":{},"body":{"injectables/RouterService.html":{}}}],["this.state.asobservable().pipe(...getpipes(this",{"_index":38,"title":{},"body":{"classes/AbstractState.html":{}}}],["this.state.getvalue",{"_index":80,"title":{},"body":{"classes/AbstractState.html":{}}}],["this.storagemap.delete(name",{"_index":148,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["this.storagemap.get(name",{"_index":147,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["this.storagemap.set(name",{"_index":150,"title":{},"body":{"injectables/IdbStorageService.html":{}}}],["this.urlhistory.push(url",{"_index":220,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.urlhistory[this.urlhistory.length",{"_index":212,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["this.urlservice.checkqueryparams(queryparams",{"_index":231,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["this.urlservice.checkurlandgetparametersifexists(url",{"_index":230,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["throw",{"_index":285,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":267,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["timer(0",{"_index":278,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["timer(100000",{"_index":279,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["true",{"_index":276,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":77,"title":{},"body":{"classes/AbstractState.html":{}}}],["tslib",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"classes/ActionsInjector.html":{},"injectables/ActionsListenerService.html":{},"injectables/IdbStorageService.html":{},"classes/LeaveRouteContext.html":{},"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/PersistenceOptions.html":{},"classes/RouteContext.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/RouterService.html":{},"interfaces/StateContext.html":{},"interfaces/StateContract.html":{},"interfaces/StateMeta.html":{},"interfaces/StorageContract.html":{},"classes/StorageInjector.html":{},"injectables/UrlParserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":569,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/deep",{"_index":60,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{}}}],["types/state",{"_index":373,"title":{},"body":{"interfaces/StateMeta.html":{}}}],["undefined",{"_index":211,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":542,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":149,"title":{},"body":{"injectables/IdbStorageService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"interfaces/StorageContract.html":{}}}],["updatemetadata",{"_index":459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatemetadata(state",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updates",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["url",{"_index":206,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{},"miscellaneous/variables.html":{}}}],["url.split",{"_index":400,"title":{},"body":{"injectables/UrlParserService.html":{}}}],["urlhistory",{"_index":177,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{}}}],["urlparserservice",{"_index":183,"title":{"injectables/UrlParserService.html":{}},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"injectables/UrlParserService.html":{},"coverage.html":{}}}],["urlservice",{"_index":182,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["use",{"_index":290,"title":{},"body":{"interfaces/PersistenceOptions.html":{},"index.html":{}}}],["useclass",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":349,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["usevalue",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["util/build",{"_index":74,"title":{},"body":{"classes/AbstractState.html":{}}}],["value",{"_index":26,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/ActionResponse.html":{},"injectables/IdbStorageService.html":{},"injectables/ObserveRouteLeaveService.html":{},"interfaces/PersistenceOptions.html":{},"injectables/RouterService.html":{},"interfaces/StorageContract.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value).pipe(map",{"_index":282,"title":{},"body":{"interfaces/PersistenceOptions.html":{}}}],["variable",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":584,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":513,"title":{},"body":{"index.html":{}}}],["via",{"_index":546,"title":{},"body":{"index.html":{}}}],["void",{"_index":51,"title":{},"body":{"classes/AbstractState.html":{},"interfaces/StateContext.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["watch",{"_index":178,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{}}}],["watch(undefined",{"_index":186,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{}}}],["watch({url",{"_index":222,"title":{},"body":{"injectables/ObserveRouteLeaveService.html":{},"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{}}}],["watcher",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watchers",{"_index":341,"title":{},"body":{"modules/SasRouteObserverModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchers$.subscribe(value",{"_index":353,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["watchers.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["watchers/leave",{"_index":346,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["watchers/watchers",{"_index":342,"title":{},"body":{"modules/SasRouteObserverModule.html":{}}}],["withcontexttype",{"_index":249,"title":{},"body":{"injectables/ObserveRouteService.html":{},"interfaces/RouteObserverWatcher.html":{},"miscellaneous/typealiases.html":{}}}],["yes",{"_index":115,"title":{},"body":{"injectables/ActionsListenerService.html":{},"injectables/UrlParserService.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":317,"title":{},"body":{"modules/SasActionsModule.html":{},"modules/SasRouteObserverModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractState.html":{"url":"classes/AbstractState.html","title":"class - AbstractState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/abstract/abstract.state.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            StateContract\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                ctx\n                            \n                            \n                                    Private\n                                    Readonly\n                                meta\n                            \n                            \n                                    Private\n                                    Readonly\n                                state\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                patchState\n                            \n                            \n                                resetState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    snapshot\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ctx\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateContext\n\n                    \n                \n                \n                    \n                        Default value : buildStateContext(this.state, this.meta)\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/abstract/abstract.state.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateMeta\n\n                    \n                \n                \n                    \n                        Default value : getMetadata(this)\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/abstract/abstract.state.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : createState(this)\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/abstract/abstract.state.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.state.asObservable().pipe(...getPipes(this))\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/abstract/abstract.state.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        patchState\n                        \n                    \n                \n            \n            \n                \npatchState(patches: DeepPartial | T)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action()\n                \n            \n\n            \n                \n                    Defined in projects/sas/src/lib/abstract/abstract.state.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patches\n                                    \n                                                DeepPartial | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetState\n                        \n                    \n                \n            \n            \n                \nresetState()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action()\n                \n            \n\n            \n                \n                    Defined in projects/sas/src/lib/abstract/abstract.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(state: T)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action()\n                \n            \n\n            \n                \n                    Defined in projects/sas/src/lib/abstract/abstract.state.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        snapshot\n                    \n                \n\n                \n                    \n                        getsnapshot()\n                    \n                \n                            \n                                \n                                    Defined in projects/sas/src/lib/abstract/abstract.state.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {StateContract} from '../state/contracts/state.contract';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {DeepPartial} from '../types/deep-partial';\nimport {createState} from '../state/metadata-helpers/create-state';\nimport {StateMeta} from '../state/contracts/state-meta';\nimport {getMetadata} from '../state/metadata-helpers/get-metadata';\nimport {getPipes} from '../state/metadata-helpers/pipes';\nimport {Action} from '../actions/decorators/action';\nimport {StateContext} from '../state/contracts/state-context';\nimport {buildStateContext} from '../util/build-state-context';\n\n\nexport abstract class AbstractState implements StateContract {\n  private readonly meta: StateMeta = getMetadata(this);\n  private readonly state: BehaviorSubject = createState(this)\n  readonly ctx: StateContext = buildStateContext(this.state, this.meta);\n  // @ts-ignore\n  readonly state$: Observable = this.state.asObservable().pipe(...getPipes(this));\n\n  get snapshot(): T {\n    return this.state.getValue();\n  }\n\n  @Action()\n  patchState(patches: DeepPartial | T): void {\n    this.ctx.patchState(patches);\n  }\n\n  @Action()\n  resetState(): void {\n    this.ctx.resetState();\n  }\n\n  @Action()\n  setState(state: T): void {\n    this.ctx.setState(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionResponse.html":{"url":"interfaces/ActionResponse.html","title":"interface - ActionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/actions/interfaces/action-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            stateName\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stateName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stateName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActionResponse {\n  name: string;\n  stateName: string;\n  value: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionsInjector.html":{"url":"classes/ActionsInjector.html","title":"class - ActionsInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionsInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/actions/actions-injector.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Optional\n                                injector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Optional\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/actions/actions-injector.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from '@angular/core';\n//@dynamic\nexport class ActionsInjector {\n  static injector?: Injector;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionsListenerService.html":{"url":"injectables/ActionsListenerService.html","title":"injectable - ActionsListenerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionsListenerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/actions/actions-listener.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listen\n                            \n                            \n                                listen\n                            \n                            \n                                listen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Subject>)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/actions/actions-listener.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/actions/actions-listener.service.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/actions/actions-listener.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/actions/actions-listener.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {ActionResponse} from './interfaces/action-response';\nimport {filter} from 'rxjs/operators';\nimport {SAS_ACTIONS$} from './actions.providers';\n\n@Injectable()\nexport class ActionsListenerService {\n  constructor(@Inject(SAS_ACTIONS$) readonly actions$: Subject>) {\n  }\n\n  listen(name: string): Observable>;\n  listen(): Observable;\n  listen(name?: string): any {\n    if (name) {\n      return this.actions$.asObservable().pipe(filter((a) => a.name === name));\n    }\n    return this.actions$.asObservable();\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdbStorageService.html":{"url":"injectables/IdbStorageService.html","title":"injectable - IdbStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdbStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/storage/idb-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                reset\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageMap: StorageMap)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/storage/idb-storage.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageMap\n                                                  \n                                                        \n                                                                    StorageMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/storage/idb-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/storage/idb-storage.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(name: string, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/storage/idb-storage.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {StorageContract} from './storage.contract';\nimport {Observable} from 'rxjs';\nimport {StorageMap} from '@ngx-pwa/local-storage';\n\n@Injectable()\nexport class IdbStorageService implements StorageContract {\n  constructor(private storageMap: StorageMap) {\n  }\n\n  get(name: string): Observable {\n    return this.storageMap.get(name);\n  }\n\n  reset(name: string): Observable {\n    return this.storageMap.delete(name);\n  }\n\n  set(name: string, value: unknown): Observable {\n    return this.storageMap.set(name, value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeaveRouteContext.html":{"url":"classes/LeaveRouteContext.html","title":"class - LeaveRouteContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeaveRouteContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                params\n                            \n                            \n                                    Public\n                                previousParams\n                            \n                            \n                                    Public\n                                previousQueryParams\n                            \n                            \n                                    Public\n                                previousUrl\n                            \n                            \n                                    Public\n                                queryParams\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(params: RouteParameters, queryParams: RouteParameters, previousQueryParams: QueryParams, previousUrl: string, previousParams: RouteParameters)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        RouteParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        RouteParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        previousQueryParams\n                                                  \n                                                        \n                                                                        QueryParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        previousUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        previousParams\n                                                  \n                                                        \n                                                                        RouteParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteParameters\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteParameters\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousQueryParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryParams\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteParameters\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {QueryParams, RouteParameters} from '../observe-route.service';\n\nexport class LeaveRouteContext {\n  constructor(public params: RouteParameters,\n              public queryParams: RouteParameters,\n              public previousQueryParams: QueryParams,\n              public previousUrl: string,\n              public previousParams: RouteParameters) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObserveRouteLeaveService.html":{"url":"injectables/ObserveRouteLeaveService.html","title":"injectable - ObserveRouteLeaveService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObserveRouteLeaveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                queryParamsHistory\n                            \n                            \n                                    Private\n                                urlHistory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                watch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    previousUrl\n                                \n                                \n                                    previousQueryParams\n                                \n                                \n                                    notFirstRoute\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: RouterService, urlService: UrlParserService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlParserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        watch\n                        \n                    \n                \n            \n            \n                \nwatch(undefined: RouteObserverWatcher)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RouteObserverWatcher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        queryParamsHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryParams[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        urlHistory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        previousUrl\n                    \n                \n\n                \n                    \n                        getpreviousUrl()\n                    \n                \n                            \n                                \n                                    Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousQueryParams\n                    \n                \n\n                \n                    \n                        getpreviousQueryParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        notFirstRoute\n                    \n                \n\n                \n                    \n                        getnotFirstRoute()\n                    \n                \n                            \n                                \n                                    Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Inject, Injectable, Injector} from '@angular/core';\nimport {ROUTER_SERVICE} from '../providers';\nimport {RouterService} from '../interfaces/router-service';\nimport {isObservable, Observable} from 'rxjs';\nimport {auditTime, filter, map, take, tap} from 'rxjs/operators';\nimport {QueryParams, RouteObserverWatcher} from './observe-route.service';\nimport {UrlParserService} from './url-parser.service';\nimport {LeaveRouteContext} from './context/leave-route-context';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObserveRouteLeaveService {\n  private urlHistory: string[] = [];\n  private queryParamsHistory: QueryParams[] = [];\n\n  private get previousUrl(): string | undefined {\n    return this.urlHistory[this.urlHistory.length - 2]\n  }\n\n  private get previousQueryParams(): QueryParams | undefined {\n    return this.queryParamsHistory[this.urlHistory.length - 2];\n  }\n\n  private get notFirstRoute(): boolean {\n    return Boolean(this.previousUrl !== undefined && this.previousQueryParams !== undefined);\n  }\n\n  constructor(@Inject(ROUTER_SERVICE) readonly router: RouterService,\n              private urlService: UrlParserService,\n              private injector: Injector) {\n    this.router.onNavigationEnd$.subscribe((url) => {\n      this.urlHistory.push(url);\n      this.queryParamsHistory.push(this.router.queryParams());\n    });\n  }\n\n  watch({url, callback, queryParams, base}: RouteObserverWatcher): Observable {\n    return this.router.onNavigationEnd$.pipe(auditTime(1),\n      filter(() => this.notFirstRoute),\n      map(() => {\n        if (this.previousUrl) {\n          const previousRouteParams = this.urlService.checkUrlAndGetParametersIfExists(url, this.previousUrl);\n          const previousQueryParams = this.urlService.checkQueryParams(queryParams, this.previousQueryParams);\n          if (previousQueryParams && previousRouteParams) {\n            return previousRouteParams;\n          }\n        }\n\n        return false;\n      }),\n      filter(v => Boolean(v)),\n      tap(value => {\n        const bindCallback = callback.bind(this.injector.get(base));\n        const response = bindCallback(new LeaveRouteContext(\n            this.urlService.checkUrlAndGetParametersIfExists(url,\n              this.urlHistory[this.urlHistory.length - 1]) || {},\n            this.router.queryParams(), this.previousQueryParams || {},\n            this.previousUrl || '', value || {}\n          )\n        );\n        if (isObservable(response)) {\n          response.pipe(take(1)).subscribe();\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObserveRouteService.html":{"url":"injectables/ObserveRouteService.html","title":"injectable - ObserveRouteService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObserveRouteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                watch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: RouterService, urlService: UrlParserService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        urlService\n                                                  \n                                                        \n                                                                        UrlParserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        watch\n                        \n                    \n                \n            \n            \n                \nwatch(undefined: RouteObserverWatcher)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RouteObserverWatcher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, Injector} from '@angular/core';\nimport {filter, map, take, tap} from 'rxjs/operators';\nimport {isObservable, Observable} from 'rxjs';\nimport {StateContract} from '../../../state';\nimport {RouterService} from '../interfaces/router-service';\nimport {ROUTER_SERVICE} from '../providers';\nimport {UrlParserService} from './url-parser.service';\nimport {RouteContext} from './context/route-context';\n\n\ntype WithContextType = (context: RouteContext) => any\ntype NopeContextType = () => any;\nexport type ObserveRouteMethodType = NopeContextType | WithContextType;\nexport type QueryParams = { [key: string]: string; }\n\nexport interface RouteObserverWatcher {\n  url: string;\n  callback: ObserveRouteMethodType;\n  base: StateContract;\n  queryParams: QueryParams;\n}\n\nexport type RouteParameters = { [key: string]: string; };\n\n\n@Injectable({providedIn: 'root'})\nexport class ObserveRouteService {\n  constructor(@Inject(ROUTER_SERVICE) private router: RouterService,\n              private urlService: UrlParserService,\n              private injector: Injector) {\n\n  }\n\n  watch({url, callback, queryParams, base}: RouteObserverWatcher): Observable {\n    return this.router.onNavigationEnd$.pipe(\n      map(e => this.urlService.checkUrlAndGetParametersIfExists(url, e) as unknown as RouteParameters),\n      filter(v => Boolean(v) && this.urlService.checkQueryParams(queryParams)),\n      tap(value => {\n        const bindCallback = callback.bind(this.injector.get(base));\n        const response = bindCallback(new RouteContext(value, this.router.queryParams()));\n        if (isObservable(response)) {\n          response.pipe(take(1)).subscribe();\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersistenceOptions.html":{"url":"interfaces/PersistenceOptions.html","title":"interface - PersistenceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersistenceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/storage/persistence.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            storage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storage:         StorageContract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageContract\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {StateCtor} from '../../state/types/state-ctor';\nimport {getMetadata} from '../../state/metadata-helpers/get-metadata';\nimport {addFactory} from '../../state/metadata-helpers/factories';\nimport {StorageInjector} from './storage-injector';\nimport {DEFAULT_STORAGE} from './providers';\nimport {StorageContract} from './storage.contract';\nimport {Observable, timer} from 'rxjs';\nimport {addPipes} from '../../state/metadata-helpers/pipes';\nimport {debounce, map, switchMap, tap} from 'rxjs/operators';\n\ninterface PersistenceOptions {\n  storage?: StorageContract;\n  name?: string;\n}\n\nexport function Persistence({storage, name}: PersistenceOptions = {}) {\n  return (ctor: StateCtor) => {\n    let factoryStarted = false;\n    addFactory(ctor.prototype,\n      (): Observable => getStorage().get(getName()).pipe(tap(() => factoryStarted = true))\n    );\n    addPipes(ctor.prototype, [\n      debounce(() => factoryStarted ? timer(0) : timer(100000)),\n      switchMap(value => getStorage().set(getName(), value).pipe(map(() => value)))\n    ]);\n\n\n    const getStorage = (): StorageContract => {\n      if (!storage) {\n        storage = StorageInjector.injector?.get(DEFAULT_STORAGE);\n      }\n\n      if (!storage) {\n        throw new Error('Add storage to @Persistence or import SasStoragePluginModule for use default storage');\n      }\n      return storage;\n    }\n    const getName = (): string => {\n      if (!name) {\n        const meta = getMetadata(ctor.prototype);\n        name = meta.name;\n      }\n      return name;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteContext.html":{"url":"classes/RouteContext.html","title":"class - RouteContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/context/route-context.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                params\n                            \n                            \n                                    Public\n                                queryParams\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(params: RouteParameters, queryParams: RouteParameters)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/route-context.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        RouteParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        RouteParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteParameters\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/route-context.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteParameters\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/context/route-context.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouteParameters} from '../observe-route.service';\n\nexport class RouteContext {\n  constructor(public params: RouteParameters, public queryParams: RouteParameters) {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteObserverWatcher.html":{"url":"interfaces/RouteObserverWatcher.html","title":"interface - RouteObserverWatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteObserverWatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base\n                                        \n                                \n                                \n                                        \n                                            callback\n                                        \n                                \n                                \n                                        \n                                            queryParams\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base:         StateContract\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateContract\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         ObserveRouteMethodType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObserveRouteMethodType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queryParams:         QueryParams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueryParams\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Inject, Injectable, Injector} from '@angular/core';\nimport {filter, map, take, tap} from 'rxjs/operators';\nimport {isObservable, Observable} from 'rxjs';\nimport {StateContract} from '../../../state';\nimport {RouterService} from '../interfaces/router-service';\nimport {ROUTER_SERVICE} from '../providers';\nimport {UrlParserService} from './url-parser.service';\nimport {RouteContext} from './context/route-context';\n\n\ntype WithContextType = (context: RouteContext) => any\ntype NopeContextType = () => any;\nexport type ObserveRouteMethodType = NopeContextType | WithContextType;\nexport type QueryParams = { [key: string]: string; }\n\nexport interface RouteObserverWatcher {\n  url: string;\n  callback: ObserveRouteMethodType;\n  base: StateContract;\n  queryParams: QueryParams;\n}\n\nexport type RouteParameters = { [key: string]: string; };\n\n\n@Injectable({providedIn: 'root'})\nexport class ObserveRouteService {\n  constructor(@Inject(ROUTER_SERVICE) private router: RouterService,\n              private urlService: UrlParserService,\n              private injector: Injector) {\n\n  }\n\n  watch({url, callback, queryParams, base}: RouteObserverWatcher): Observable {\n    return this.router.onNavigationEnd$.pipe(\n      map(e => this.urlService.checkUrlAndGetParametersIfExists(url, e) as unknown as RouteParameters),\n      filter(v => Boolean(v) && this.urlService.checkQueryParams(queryParams)),\n      tap(value => {\n        const bindCallback = callback.bind(this.injector.get(base));\n        const response = bindCallback(new RouteContext(value, this.router.queryParams()));\n        if (isObservable(response)) {\n          response.pipe(take(1)).subscribe();\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterService.html":{"url":"injectables/RouterService.html","title":"injectable - RouterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/router.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseFilter$\n                            \n                            \n                                    Readonly\n                                onNavigationEnd$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                queryParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/router.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        queryParams\n                        \n                    \n                \n            \n            \n                \nqueryParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/route-observer/services/router.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         QueryParams\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.router.events.pipe(\n    filter((e) => e instanceof NavigationEnd)\n  ) as Observable\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/router.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        onNavigationEnd$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.baseFilter$.pipe(map(e => e.url.split('?')[0]))\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/router.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {RouterService as RouterServiceContract} from '../interfaces/router-service';\nimport {filter, map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {QueryParams} from './observe-route.service';\n\n@Injectable()\nexport class RouterService implements RouterServiceContract {\n  private baseFilter$ = this.router.events.pipe(\n    filter((e) => e instanceof NavigationEnd)\n  ) as Observable;\n  readonly onNavigationEnd$: Observable = this.baseFilter$.pipe(map(e => e.url.split('?')[0]));\n\n  queryParams(): QueryParams {\n    return this.router.routerState.root.snapshot.queryParams;\n  }\n\n  constructor(private router: Router) {\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SasActionsModule.html":{"url":"modules/SasActionsModule.html","title":"module - SasActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    SasActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SasActionsModule\n\n\n\ncluster_SasActionsModule_providers\n\n\n\n\nActionsListenerService\n\nActionsListenerService\n\n\n\nSasActionsModule\n\nSasActionsModule\n\nSasActionsModule -->\n\nActionsListenerService->SasActionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/sas/src/lib/actions/sas-actions.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Actions module for\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActionsListenerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Injector, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ActionsListenerService} from './actions-listener.service';\nimport {ActionsInjector} from './actions-injector';\nimport {SAS_ACTIONS_PROVIDERS} from './actions.providers';\n\n/**\n * Actions module for\n */\n@NgModule({\n  providers: [\n    ActionsListenerService,\n    SAS_ACTIONS_PROVIDERS\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SasActionsModule {\n  constructor(injector: Injector) {\n    ActionsInjector.injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SasModule.html":{"url":"modules/SasModule.html","title":"module - SasModule","body":"\n                   \n\n\n\n\n    Modules\n    SasModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/sas/src/lib/sas.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: []\n})\nexport class SasModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SasRouteObserverModule.html":{"url":"modules/SasRouteObserverModule.html","title":"module - SasRouteObserverModule","body":"\n                   \n\n\n\n\n    Modules\n    SasRouteObserverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SasRouteObserverModule\n\n\n\ncluster_SasRouteObserverModule_providers\n\n\n\n\nRouterService\n\nRouterService\n\n\n\nSasRouteObserverModule\n\nSasRouteObserverModule\n\nSasRouteObserverModule -->\n\nRouterService->SasRouteObserverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/sas-route-observer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RouterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {ObserveRouteService} from './services/observe-route.service';\nimport {getPreviousWatchers, WATCHERS$} from './watchers/watchers';\nimport {RouterService} from './services/router.service';\nimport {ROUTER_SERVICE} from './providers';\nimport {getPreviousLeaveWatchers, LEAVE_WATCHERS$} from './watchers/leave-watchers';\nimport {ObserveRouteLeaveService} from './services/observe-route-leave.service';\n\n\n@NgModule({\n  providers: [\n    RouterService,\n    {\n      provide: ROUTER_SERVICE,\n      useExisting: RouterService\n    }\n  ]\n})\nexport class SasRouteObserverModule {\n  constructor(observeRouteService: ObserveRouteService, observeRouteLeaveService: ObserveRouteLeaveService) {\n    getPreviousWatchers().forEach(value => observeRouteService.watch(value).subscribe());\n    WATCHERS$.subscribe(value => observeRouteService.watch(value).subscribe());\n\n    getPreviousLeaveWatchers().forEach(value => observeRouteLeaveService.watch(value).subscribe());\n    LEAVE_WATCHERS$.subscribe(value => observeRouteLeaveService.watch(value).subscribe());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SasStoragePluginModule.html":{"url":"modules/SasStoragePluginModule.html","title":"module - SasStoragePluginModule","body":"\n                   \n\n\n\n\n    Modules\n    SasStoragePluginModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/storage/sas-storage-plugin.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {Injector, NgModule} from '@angular/core';\nimport {StorageInjector} from './storage-injector';\nimport {SAS_DEFAULT_STORAGE_PROVIDER} from './providers';\n\n@NgModule({providers: [SAS_DEFAULT_STORAGE_PROVIDER]})\nexport class SasStoragePluginModule {\n  constructor(injector: Injector) {\n    StorageInjector.injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateContext.html":{"url":"interfaces/StateContext.html","title":"interface - StateContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/state/contracts/state-context.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        patchState\n                                    \n                                \n                                \n                                    \n                                        resetState\n                                    \n                                \n                                \n                                    \n                                        setState\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        patchState\n                        \n                    \n                \n            \n            \n                \npatchState(state: DeepPartial | T)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/state/contracts/state-context.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DeepPartial | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetState\n                        \n                    \n                \n            \n            \n                \nresetState()\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/state/contracts/state-context.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/state/contracts/state-context.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DeepPartial} from '../../types/deep-partial';\n\nexport interface StateContext {\n  setState(state: T): void;\n\n  patchState(state: DeepPartial | T): void;\n\n  resetState(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateContract.html":{"url":"interfaces/StateContract.html","title":"interface - StateContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/state/contracts/state.contract.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        StateContext\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ctx\n                                        \n                                \n                                \n                                        \n                                            snapshot\n                                        \n                                \n                                \n                                        \n                                            state$\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ctx\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ctx:         StateContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateContext\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snapshot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snapshot:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {StateContext} from './state-context';\n\n\nexport interface StateContract extends StateContext {\n  readonly snapshot: T;\n  readonly state$: Observable;\n  readonly ctx: StateContext;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateMeta.html":{"url":"interfaces/StateMeta.html","title":"interface - StateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/state/contracts/state-meta.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            defaults\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            factory\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pipes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaults:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        factory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factory:         StateFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateFactory\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pipes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pipes:         StatePipes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StatePipes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {OperatorFunction} from 'rxjs';\nimport {StateFactory} from '../types/state-factory';\n\nexport type StatePipe = OperatorFunction;\nexport type StatePipes = StatePipe[];\n\nexport interface StateMeta {\n  name: string;\n  defaults?: T;\n  pipes?: StatePipes;\n  factory?: StateFactory;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StorageContract.html":{"url":"interfaces/StorageContract.html","title":"interface - StorageContract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StorageContract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/storage/storage.contract.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        reset\n                                    \n                                \n                                \n                                    \n                                        set\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/storage/storage.contract.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/storage/storage.contract.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(name: string, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/storage/storage.contract.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Observable} from 'rxjs';\n\nexport interface StorageContract {\n  set(name: string, value: unknown): Observable;\n\n  get(name: string): Observable;\n\n  reset(name: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageInjector.html":{"url":"classes/StorageInjector.html","title":"class - StorageInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/storage/storage-injector.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Optional\n                                injector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Optional\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/sas/src/lib/plugins/storage/storage-injector.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injector} from '@angular/core';\n//@dynamic\nexport class StorageInjector {\n  static injector?: Injector;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlParserService.html":{"url":"injectables/UrlParserService.html","title":"injectable - UrlParserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UrlParserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/sas/src/lib/plugins/route-observer/services/url-parser.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkQueryParams\n                            \n                            \n                                checkUrlAndGetParametersIfExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: RouterService)\n                    \n                \n                        \n                            \n                                Defined in projects/sas/src/lib/plugins/route-observer/services/url-parser.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkQueryParams\n                        \n                    \n                \n            \n            \n                \ncheckQueryParams(params: QueryParams, currentParams?: QueryParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/route-observer/services/url-parser.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                QueryParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentParams\n                                    \n                                                QueryParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkUrlAndGetParametersIfExists\n                        \n                    \n                \n            \n            \n                \ncheckUrlAndGetParametersIfExists(url: string, currentUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/sas/src/lib/plugins/route-observer/services/url-parser.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :          | RouteParameters\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {QueryParams, RouteParameters} from './observe-route.service';\nimport {isEmpty} from 'lodash-es';\nimport {ROUTER_SERVICE} from '../providers';\nimport {RouterService} from '../interfaces/router-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlParserService {\n\n  constructor(@Inject(ROUTER_SERVICE) readonly router: RouterService) {\n  }\n\n  checkQueryParams(params: QueryParams, currentParams?: QueryParams): boolean {\n    if (isEmpty(params)) {\n      return true;\n    }\n    const routeParams = currentParams || this.router.queryParams();\n\n    return Boolean(Object.entries(params).filter(([key, value]) => {\n      if (value === '*' && key in routeParams) {\n        return true;\n      }\n\n      return value === routeParams[key];\n    }).length)\n  }\n\n\n  checkUrlAndGetParametersIfExists(url: string, currentUrl: string): false | RouteParameters {\n    if (url === currentUrl) {\n      return {};\n    }\n    const splitUrl = url.split('/');\n    const splitCurrentUrl = currentUrl.split('/');\n    const parameters: RouteParameters = {};\n    if (splitCurrentUrl.length !== splitUrl.length) {\n      return false;\n    }\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/sas/src/lib/abstract/abstract.state.ts\n            \n            class\n            AbstractState\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/actions-injector.ts\n            \n            class\n            ActionsInjector\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/actions-listener.service.ts\n            \n            injectable\n            ActionsListenerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/actions.providers.ts\n            \n            variable\n            ACTIONS_SUBJECT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/actions.providers.ts\n            \n            variable\n            SAS_ACTIONS_PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/actions.providers.ts\n            \n            variable\n            SAS_ACTIONS$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/action.ts\n            \n            variable\n            Action\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/actions-helpers.ts\n            \n            variable\n            actions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/actions-helpers.ts\n            \n            variable\n            defaultActionName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/actions-helpers.ts\n            \n            variable\n            dispatchAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/actions-helpers.ts\n            \n            variable\n            getActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/async-action.ts\n            \n            function\n            AsyncAction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/decorators/async-action.ts\n            \n            variable\n            changeState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/actions/interfaces/action-response.ts\n            \n            interface\n            ActionResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/interfaces/router-service.ts\n            \n            interface\n            RouterService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/observe-route.ts\n            \n            variable\n            ObserveRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/observe-route.ts\n            \n            variable\n            ObserveRouteLeave\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/providers.ts\n            \n            variable\n            ROUTER_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/context/leave-route-context.ts\n            \n            class\n            LeaveRouteContext\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/context/route-context.ts\n            \n            class\n            RouteContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/observe-route-leave.service.ts\n            \n            injectable\n            ObserveRouteLeaveService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts\n            \n            injectable\n            ObserveRouteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts\n            \n            interface\n            RouteObserverWatcher\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/router.service.ts\n            \n            injectable\n            RouterService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/services/url-parser.service.ts\n            \n            injectable\n            UrlParserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n            \n            variable\n            addLeaveWatcher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n            \n            variable\n            getPreviousLeaveWatchers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n            \n            variable\n            LEAVE_WATCHERS$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n            \n            variable\n            OBSERVE_ROUTE_LEAVE_WATCHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n            \n            variable\n            PREVIOUS_WATCHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n            \n            variable\n            PREVIOUS_WATCHERS_LOADED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n            \n            variable\n            addWatcher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n            \n            variable\n            getPreviousWatchers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n            \n            variable\n            MODULE_LOADED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n            \n            variable\n            PREVIOUS_WATCHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n            \n            variable\n            ROUTE_OBSERVER_WATCHERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n            \n            variable\n            WATCHERS$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/idb-storage.service.ts\n            \n            injectable\n            IdbStorageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/persistence.ts\n            \n            interface\n            PersistenceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/persistence.ts\n            \n            function\n            Persistence\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/providers.ts\n            \n            variable\n            DEFAULT_STORAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/providers.ts\n            \n            variable\n            SAS_DEFAULT_STORAGE_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/storage-injector.ts\n            \n            class\n            StorageInjector\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/plugins/storage/storage.contract.ts\n            \n            interface\n            StorageContract\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/constants.ts\n            \n            variable\n            SAS_META_FACTORIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/constants.ts\n            \n            variable\n            SAS_META_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/constants.ts\n            \n            variable\n            SAS_META_PIPES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/contracts/state-context.ts\n            \n            interface\n            StateContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/contracts/state-meta.ts\n            \n            interface\n            StateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/contracts/state.contract.ts\n            \n            interface\n            StateContract\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/create-state.ts\n            \n            variable\n            createState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/factories.ts\n            \n            variable\n            addFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/factories.ts\n            \n            variable\n            getFactories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/get-metadata.ts\n            \n            variable\n            getMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/pipes.ts\n            \n            variable\n            addPipes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/pipes.ts\n            \n            variable\n            getPipes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/metadata-helpers/update-metadata.ts\n            \n            function\n            updateMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/state/state.ts\n            \n            function\n            State\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/util/build-state-context.ts\n            \n            variable\n            buildStateContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/util/clone-and-merge.ts\n            \n            function\n            cloneAndMerge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/lib/util/clone-deep.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/sas/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.2\n        \n            @angular/common : ~12.2.2\n        \n            @angular/compiler : ~12.2.2\n        \n            @angular/core : ~12.2.2\n        \n            @angular/forms : ~12.2.2\n        \n            @angular/platform-browser : ~12.2.2\n        \n            @angular/platform-browser-dynamic : ~12.2.2\n        \n            @angular/router : ^12.2.2\n        \n            @ngx-pwa/local-storage : ^12.1.0\n        \n            lodash-es : ^4.17.21\n        \n            merge-deep : ^3.0.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (projects/.../async-action.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/sas/src/lib/actions/decorators/async-action.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 Set\n                            \n                        \n                        \n                            \n                                 Patch\n                            \n                        \n                        \n                            \n                                 Reset\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AsyncAction   (projects/.../async-action.ts)\n                        \n                        \n                            cloneAndMerge   (projects/.../clone-and-merge.ts)\n                        \n                        \n                            Persistence   (projects/.../persistence.ts)\n                        \n                        \n                            State   (projects/.../state.ts)\n                        \n                        \n                            updateMetadata   (projects/.../update-metadata.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/sas/src/lib/actions/decorators/async-action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AsyncAction\n                        \n                    \n                \n            \n            \n                \nAsyncAction(type: ActionType, name?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                ActionType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ActionType.Set\n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/sas/src/lib/util/clone-and-merge.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cloneAndMerge\n                        \n                    \n                \n            \n            \n                \ncloneAndMerge(source: T, data: DeepPartial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/sas/src/lib/plugins/storage/persistence.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Persistence\n                        \n                    \n                \n            \n            \n                \nPersistence(__namedParameters: {storage: PersistenceOptions, name})\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storage\n                                    \n                                                PersistenceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/sas/src/lib/state/state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        State\n                        \n                    \n                \n            \n            \n                \nState(meta: StateMeta)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    meta\n                                    \n                                                StateMeta\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/sas/src/lib/state/metadata-helpers/update-metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        updateMetadata\n                        \n                    \n                \n            \n            \n                \nupdateMetadata(state: StateContract, updates: Partial)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                StateContract\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updates\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSas\nThis project was generated with Angular CLI version 11.2.10.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SasActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SasModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SasRouteObserverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SasStoragePluginModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SasActionsModule\n\n\n\ncluster_SasActionsModule_providers\n\n\n\ncluster_SasRouteObserverModule\n\n\n\ncluster_SasRouteObserverModule_providers\n\n\n\n\nActionsListenerService\n\nActionsListenerService\n\n\n\nSasActionsModule\n\nSasActionsModule\n\nSasActionsModule -->\n\nActionsListenerService->SasActionsModule\n\n\n\n\n\nRouterService\n\nRouterService\n\n\n\nSasRouteObserverModule\n\nSasRouteObserverModule\n\nSasRouteObserverModule -->\n\nRouterService->SasRouteObserverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AsyncActionType   (projects/.../async-action.ts)\n                        \n                        \n                            DeepPartial   (projects/.../deep-partial.ts)\n                        \n                        \n                            Immutable   (projects/.../immutable.ts)\n                        \n                        \n                            NopeContextType   (projects/.../observe-route.service.ts)\n                        \n                        \n                            ObserveRouteMethodType   (projects/.../observe-route.service.ts)\n                        \n                        \n                            QueryParams   (projects/.../observe-route.service.ts)\n                        \n                        \n                            RouteParameters   (projects/.../observe-route.service.ts)\n                        \n                        \n                            StateCtor   (projects/.../state-ctor.ts)\n                        \n                        \n                            StateFactory   (projects/.../state-factory.ts)\n                        \n                        \n                            StatePipe   (projects/.../state-meta.ts)\n                        \n                        \n                            StatePipes   (projects/.../state-meta.ts)\n                        \n                        \n                            WithContextType   (projects/.../observe-route.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/sas/src/lib/actions/decorators/async-action.ts\n    \n    \n        \n            \n                \n                    \n                    AsyncActionType\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/sas/src/lib/types/deep-partial.ts\n    \n    \n        \n            \n                \n                    \n                    DeepPartial\n                \n            \n            \n                \n                         | Partial\n\n                \n            \n        \n    \n    projects/sas/src/lib/types/immutable.ts\n    \n    \n        \n            \n                \n                    \n                    Immutable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/sas/src/lib/plugins/route-observer/services/observe-route.service.ts\n    \n    \n        \n            \n                \n                    \n                    NopeContextType\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ObserveRouteMethodType\n                \n            \n            \n                \n                        NopeContextType | WithContextType\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RouteParameters\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WithContextType\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/sas/src/lib/state/types/state-ctor.ts\n    \n    \n        \n            \n                \n                    \n                    StateCtor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/sas/src/lib/state/types/state-factory.ts\n    \n    \n        \n            \n                \n                    \n                    StateFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/sas/src/lib/state/contracts/state-meta.ts\n    \n    \n        \n            \n                \n                    \n                    StatePipe\n                \n            \n            \n                \n                        OperatorFunction\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StatePipes\n                \n            \n            \n                \n                            StatePipe[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (projects/.../action.ts)\n                        \n                        \n                            actions   (projects/.../actions-helpers.ts)\n                        \n                        \n                            ACTIONS_SUBJECT   (projects/.../actions.providers.ts)\n                        \n                        \n                            addFactory   (projects/.../factories.ts)\n                        \n                        \n                            addLeaveWatcher   (projects/.../leave-watchers.ts)\n                        \n                        \n                            addPipes   (projects/.../pipes.ts)\n                        \n                        \n                            addWatcher   (projects/.../watchers.ts)\n                        \n                        \n                            buildStateContext   (projects/.../build-state-context.ts)\n                        \n                        \n                            changeState   (projects/.../async-action.ts)\n                        \n                        \n                            cloneDeep   (projects/.../clone-deep.ts)\n                        \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            createState   (projects/.../create-state.ts)\n                        \n                        \n                            DEFAULT_STORAGE   (projects/.../providers.ts)\n                        \n                        \n                            defaultActionName   (projects/.../actions-helpers.ts)\n                        \n                        \n                            dispatchAction   (projects/.../actions-helpers.ts)\n                        \n                        \n                            getActions   (projects/.../actions-helpers.ts)\n                        \n                        \n                            getFactories   (projects/.../factories.ts)\n                        \n                        \n                            getMetadata   (projects/.../get-metadata.ts)\n                        \n                        \n                            getPipes   (projects/.../pipes.ts)\n                        \n                        \n                            getPreviousLeaveWatchers   (projects/.../leave-watchers.ts)\n                        \n                        \n                            getPreviousWatchers   (projects/.../watchers.ts)\n                        \n                        \n                            LEAVE_WATCHERS$   (projects/.../leave-watchers.ts)\n                        \n                        \n                            MODULE_LOADED   (projects/.../watchers.ts)\n                        \n                        \n                            OBSERVE_ROUTE_LEAVE_WATCHERS   (projects/.../leave-watchers.ts)\n                        \n                        \n                            ObserveRoute   (projects/.../observe-route.ts)\n                        \n                        \n                            ObserveRouteLeave   (projects/.../observe-route.ts)\n                        \n                        \n                            PREVIOUS_WATCHERS   (projects/.../leave-watchers.ts)\n                        \n                        \n                            PREVIOUS_WATCHERS   (projects/.../watchers.ts)\n                        \n                        \n                            PREVIOUS_WATCHERS_LOADED   (projects/.../leave-watchers.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                        \n                            ROUTE_OBSERVER_WATCHERS   (projects/.../watchers.ts)\n                        \n                        \n                            ROUTER_SERVICE   (projects/.../providers.ts)\n                        \n                        \n                            SAS_ACTIONS_PROVIDERS   (projects/.../actions.providers.ts)\n                        \n                        \n                            SAS_ACTIONS$   (projects/.../actions.providers.ts)\n                        \n                        \n                            SAS_DEFAULT_STORAGE_PROVIDER   (projects/.../providers.ts)\n                        \n                        \n                            SAS_META_FACTORIES_KEY   (projects/.../constants.ts)\n                        \n                        \n                            SAS_META_KEY   (projects/.../constants.ts)\n                        \n                        \n                            SAS_META_PIPES_KEY   (projects/.../constants.ts)\n                        \n                        \n                            WATCHERS$   (projects/.../watchers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/sas/src/lib/actions/decorators/action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Action\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name?: string) => {\n  return (target: StateContract, property: string, descriptor: PropertyDescriptor) => {\n    const original = descriptor.value;\n    descriptor.value = function (...args: any[]) {\n      const res = original.apply(this, args);\n      dispatchAction(this as StateContract, property, name);\n      return res;\n    }\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/actions/decorators/actions-helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultActionName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (target: StateContract, property: string): string => {\n  const meta = getMetadata(target);\n  return `${meta.name}.${property}`\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dispatchAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (target: StateContract, property: string, name?: string): void => {\n  const actions = getActions();\n  const value = target.snapshot;\n  const meta = getMetadata(target);\n  if (actions) {\n    actions.next({value, stateName: meta.name, name: name || defaultActionName(target, property)})\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Subject> | undefined => {\n  if (!actions) {\n    actions = ActionsInjector.injector?.get(SAS_ACTIONS$);\n  }\n\n  return actions;\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/actions/actions.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACTIONS_SUBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SAS_ACTIONS_PROVIDERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: SAS_ACTIONS$,\n    useValue: ACTIONS_SUBJECT\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SAS_ACTIONS$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>>('Sas actions')\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/state/metadata-helpers/factories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract, factory: StateFactory): void => {\n  const factories = getFactories(state);\n  factories.push(factory);\n  Reflect.defineMetadata(SAS_META_FACTORIES_KEY, factories, state);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFactories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract): StateFactory[] => {\n  return Reflect.getMetadata(SAS_META_FACTORIES_KEY, state) as StateFactory[] || [];\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/plugins/route-observer/watchers/leave-watchers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addLeaveWatcher\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (watcher: RouteObserverWatcher) => PREVIOUS_WATCHERS_LOADED ?\n  OBSERVE_ROUTE_LEAVE_WATCHERS.next(watcher) :\n  PREVIOUS_WATCHERS.push(watcher)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousLeaveWatchers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  PREVIOUS_WATCHERS_LOADED = true;\n  return PREVIOUS_WATCHERS;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LEAVE_WATCHERS$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : OBSERVE_ROUTE_LEAVE_WATCHERS.asObservable()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OBSERVE_ROUTE_LEAVE_WATCHERS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREVIOUS_WATCHERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteObserverWatcher[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREVIOUS_WATCHERS_LOADED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/state/metadata-helpers/pipes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addPipes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract, pipes: StatePipes): void => {\n  Reflect.defineMetadata(SAS_META_PIPES_KEY, [...getPipes(state), ...pipes], state);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPipes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract): StatePipes => {\n  return Reflect.getMetadata(SAS_META_PIPES_KEY, state) || [];\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/plugins/route-observer/watchers/watchers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addWatcher\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (watcher: RouteObserverWatcher) => MODULE_LOADED ?\n  ROUTE_OBSERVER_WATCHERS.next(watcher) :\n  PREVIOUS_WATCHERS.push(watcher)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousWatchers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  MODULE_LOADED = true;\n  return PREVIOUS_WATCHERS;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MODULE_LOADED\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREVIOUS_WATCHERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteObserverWatcher[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTE_OBSERVER_WATCHERS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WATCHERS$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ROUTE_OBSERVER_WATCHERS.asObservable()\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/util/build-state-context.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buildStateContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: BehaviorSubject, meta: StateMeta): StateContext => {\n  return {\n    patchState(patches: DeepPartial | T): void {\n      state.next(cloneAndMerge(state.getValue() as T, patches));\n    },\n    setState(value: T): void {\n      state.next(value);\n    },\n    resetState(): void {\n      state.next(meta.defaults as T);\n    }\n  };\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/actions/decorators/async-action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        changeState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract, value: any, strategy: ActionType): void => {\n  if (strategy === ActionType.Set) {\n    state.ctx.setState(value);\n  } else if (strategy === ActionType.Patch) {\n    state.ctx.patchState(value);\n  } else if (strategy === ActionType.Reset) {\n    state.ctx.resetState();\n  }\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/util/clone-deep.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cloneDeep\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (target: T): T => {\n  if (target === null) {\n    return target;\n  }\n  if (target instanceof Date) {\n    return new Date(target.getTime()) as any;\n  }\n  if (target instanceof Array) {\n    const cp = [] as any[];\n    (target as any[]).forEach((v) => {\n      cp.push(v);\n    });\n    return cp.map((n: any) => cloneDeep(n)) as any;\n  }\n  if (typeof target === 'object' && target !== {}) {\n    const cp = {...(target as { [key: string]: any })} as { [key: string]: any };\n    Object.keys(cp).forEach(k => {\n      cp[k] = cloneDeep(cp[k]);\n    });\n    return cp as T;\n  }\n  return target;\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/state/metadata-helpers/create-state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract): BehaviorSubject => {\n  const factories = getFactories(state);\n  const meta = getMetadata(state);\n  const sub = new BehaviorSubject(meta.defaults as T);\n  if (factories.length) {\n    factories\n      .reduce(\n        (prev, current) => prev.pipe(switchMap(current)),\n        of(meta.defaults)\n      )\n      .pipe(take(1))\n      .subscribe(value => {\n        sub.next(value as T);\n      });\n  }\n\n  return sub;\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/plugins/storage/providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_STORAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Sas state default storage')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SAS_DEFAULT_STORAGE_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: DEFAULT_STORAGE,\n  useClass: IdbStorageService\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/state/metadata-helpers/get-metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: StateContract): StateMeta => {\n  const meta = Reflect.getMetadata(SAS_META_KEY, state);\n  if (!Boolean(meta)) {\n    throw new Error('State metadata not defined, please add @State decorator')\n  }\n\n  return meta;\n}\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/plugins/route-observer/observe-route.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ObserveRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (url: string, queryParams: QueryParams = {}) =>\n  (target: any, property: string, descriptor: PropertyDescriptor) => {\n    addWatcher({url, callback: descriptor.value as ObserveRouteMethodType, queryParams, base: target.constructor});\n  }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ObserveRouteLeave\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (url: string, queryParams: QueryParams = {}) =>\n  (target: any, property: string, descriptor: PropertyDescriptor) => {\n    addLeaveWatcher({url, callback: descriptor.value as ObserveRouteMethodType, queryParams, base: target.constructor});\n  }\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/plugins/route-observer/providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROUTER_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Special Router Service for listen url change and get query params')\n                    \n                \n\n\n        \n    \n\n    projects/sas/src/lib/state/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SAS_META_FACTORIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sas_meta_factories'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SAS_META_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sas_meta'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SAS_META_PIPES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sas_meta_pipes'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
